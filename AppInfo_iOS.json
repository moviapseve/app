{
  "baseUrl": {
    "home": "https://hdtoday.tv/home",
    "popular": [
      {
        "type": "movie",
        "title": "Movies",
        "url": "https://hdtoday.tv/movie"
      },
      {
        "type": "tv",
        "title": "TV Shows",
        "url": "https://hdtoday.tv/tv-show"
      }
    ],
    "topIMDB": [
      {
        "type": "all",
        "title": "All",
        "url": "https://hdtoday.tv/top-imdb?type=all"
      },
      {
        "type": "movie",
        "title": "Movies",
        "url": "https://hdtoday.tv/top-imdb?type=movie"
      },
      {
        "type": "tv",
        "title": "TV Shows",
        "url": "https://hdtoday.tv/top-imdb?type=tv"
      }
    ],
    "search": "https://hdtoday.tv/search",
    "filter": "https://hdtoday.tv/filter",
    "filterDefault": "https://hdtoday.tv/filter?type=all&quality=all&release_year=all&genre=all&country=all"
  },
  "alerts": [
    {
      "type": "version",
      "value": "1.0.0",
      "title": "Update The New Version",
      "message": "This app has been updated by Apple to display the Apple Watch app icon.\nThe latest update includes minor improvements and fixes.",
      "url": "https://apps.apple.com/us/app/id471966214",
      "yes": "Update",
      "no": "Close",
      "show": false,
      "force": false
    },
    {
      "type": "rating",
      "value": "",
      "title": "Write down your comment",
      "message": "If you love our app, please take a moment to rate it in the App Store",
      "url": "https://itunes.apple.com/app/id471966214?action=write-review",
      "yes": "Rate",
      "no": "Close",
      "show": true,
      "force": false
    },
    {
      "type": "announcement",
      "value": "",
      "title": "Twitter @elonmusk",
      "message": "For the latest app news, please follow us on Twitter.",
      "url": "https://twitter.com/elonmusk",
      "yes": "Follow",
      "no": "Close",
      "show": true,
      "force": false
    }
  ],
  "ads": {
    "rotate": false,
    "items": [
      {
        "type": "applovin",
        "sdkKey": "",
        "adId": ""
      },
      {
        "type": "admob",
        "sdkKey": "",
        "adId": ""
      },
      {
        "type": "unity",
        "sdkKey": "",
        "adId": ""
      }
    ]
  },
  "userAgent": "Mozilla/5.0 (iPhone; CPU iPhone OS 15_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/",
  "script": {
    "home": "Z2V0SG9tZSgpCgpmdW5jdGlvbiBnZXRIb21lKCkgewogICAgdmFyIHRpdGxlID0gIlRyZW5kaW5nIE1vdmllcyIKICAgIHZhciB0cmVuZGluZ01vdmllcyA9IHsKICAgICAgICB0aXRsZTogdGl0bGUsCiAgICAgICAgdmlld01vcmU6ICIiLAogICAgICAgIHVybDogIiIsCiAgICAgICAgaXRlbXM6IGdldFRyZW5kaW5nTWVkaWFzQnlJZCgidHJlbmRpbmctbW92aWVzIikKICAgIH0KICAgIHRpdGxlID0gIlRyZW5kaW5nIFRWIFNob3dzIgogICAgdmFyIHRyZW5kaW5nVFZTaG93cyA9IHsKICAgICAgICB0aXRsZTogdGl0bGUsCiAgICAgICAgdmlld01vcmU6ICIiLAogICAgICAgIHVybDogIiIsCiAgICAgICAgaXRlbXM6IGdldFRyZW5kaW5nTWVkaWFzQnlJZCgidHJlbmRpbmctdHYiKQogICAgfQogICAgCiAgICB0aXRsZSA9ICJMYXRlc3QgTW92aWVzIgogICAgdmFyIGxhdGVzdE1vdmllcyA9IHsKICAgICAgICB0aXRsZTogdGl0bGUsCiAgICAgICAgdmlld01vcmU6ICIiLAogICAgICAgIHVybDogIiIsCiAgICAgICAgaXRlbXM6IGdldE1lZGlhc0J5VGl0bGUodGl0bGUpCiAgICB9CiAgICAKICAgIHRpdGxlID0gIkxhdGVzdCBUViBTaG93cyIKICAgIHZhciBsYXRlc3RUVlNob3dzID0gewogICAgICAgIHRpdGxlOiB0aXRsZSwKICAgICAgICB2aWV3TW9yZTogIiIsCiAgICAgICAgdXJsOiAiIiwKICAgICAgICBpdGVtczogZ2V0TWVkaWFzQnlUaXRsZSh0aXRsZSkKICAgIH0KICAgIAogICAgdGl0bGUgPSAiQ29taW5nIFNvb24iCiAgICB2YXIgY29taW5nU29vbiA9IHsKICAgICAgICB0aXRsZTogdGl0bGUsCiAgICAgICAgdmlld01vcmU6ICJWaWV3IG1vcmUiLAogICAgICAgIHVybDogImh0dHBzOi8vaGR0b2RheS50di9jb21pbmctc29vbiIsCiAgICAgICAgaXRlbXM6IGdldE1lZGlhc0J5VGl0bGUodGl0bGUpCiAgICB9CiAgICAKICAgIHRpdGxlID0gIkdlbnJlcyIKICAgIHZhciBnZW5yZXMgPSB7CiAgICAgICAgdGl0bGU6IHRpdGxlLAogICAgICAgIGl0ZW1zOiBnZXRHZW5yZXMoKQogICAgfQogICAgCiAgICB0aXRsZSA9ICJDb3VudHJpZXMiCiAgICB2YXIgY291bnRyaWVzID0gewogICAgICAgIHRpdGxlOiB0aXRsZSwKICAgICAgICBpdGVtczogZ2V0Q291bnRyaWVzKCkKICAgIH0KICAgIAogICAgdmFyIHJlc3VsdCA9IHsKICAgICAgICB0cmVuZGluZ01vdmllczogdHJlbmRpbmdNb3ZpZXMsIAogICAgICAgIHRyZW5kaW5nVFZTaG93czogdHJlbmRpbmdUVlNob3dzLAogICAgICAgIGxhdGVzdE1vdmllczogbGF0ZXN0TW92aWVzLAogICAgICAgIGxhdGVzdFRWU2hvd3M6IGxhdGVzdFRWU2hvd3MsCiAgICAgICAgY29taW5nU29vbjogY29taW5nU29vbiwKICAgICAgICBnZW5yZXM6IGdlbnJlcywKICAgICAgICBjb3VudHJpZXM6IGNvdW50cmllcwogICAgfQogICAgCiAgICBjb25zb2xlLmxvZyhKU09OLnN0cmluZ2lmeShyZXN1bHQpKQogICAgaWYgKGlPUygpID09IHRydWUpIHsKICAgICAgICB3aW5kb3cud2Via2l0Lm1lc3NhZ2VIYW5kbGVycy5ob21lLnBvc3RNZXNzYWdlKEpTT04uc3RyaW5naWZ5KHJlc3VsdCkpCiAgICB9ZWxzZXsKICAgICAgICB3aW5kb3cuaG9tZS5wb3N0TWVzc2FnZShKU09OLnN0cmluZ2lmeShyZXN1bHQpKQogICAgfQp9CgpmdW5jdGlvbiBpT1MoKXsKICAgIGNvbnNvbGUubG9nKG5hdmlnYXRvci5wbGF0Zm9ybSkKICAgIHJldHVybiAvaVBhZHxpUGhvbmV8aVBvZC8udGVzdChuYXZpZ2F0b3IucGxhdGZvcm0pCn0KCgpmdW5jdGlvbiBnZXRUcmVuZGluZ01lZGlhc0J5SWQoaWQpIHsKICAgIHZhciBpdGVtcyA9IFtdCiAgICB2YXIgbm9kZXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCkuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiZmx3LWl0ZW0iKQogICAgZm9yIChub2RlIG9mIG5vZGVzKSB7CiAgICAgICAgdmFyIGl0ZW0gPSBnZXRNZWRpYShub2RlKQogICAgICAgIGl0ZW1zLnB1c2goaXRlbSkKICAgIH0KICAgIHJldHVybiBpdGVtcwp9CgpmdW5jdGlvbiBnZXRNZWRpYShub2RlKXsKICAgIGxldCBwb3N0ZXJzID0gbm9kZS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJmaWxtLXBvc3RlciIpCiAgICB2YXIgaWQgPSAiIgogICAgdmFyIHRpdGxlID0gIiIKICAgIHZhciB1cmwgPSAiIgogICAgdmFyIGltYWdlID0gIiIKICAgIHZhciByZWxlYXNlRGF0ZSA9ICIiCiAgICB2YXIgcXVhbGl0eSA9ICIiCiAgICB2YXIgdHlwZSA9ICIiCiAgICBpZiAocG9zdGVycy5sZW5ndGggPiAwKSB7CiAgICAgICAgaWQgPSBwb3N0ZXJzWzBdLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJhIilbMF0uZ2V0QXR0cmlidXRlKCJocmVmIikKICAgICAgICB0aXRsZSA9IHBvc3RlcnNbMF0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoImEiKVswXS50aXRsZQogICAgICAgIHVybCA9IHBvc3RlcnNbMF0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoImEiKVswXS5ocmVmCiAgICAgICAgaW1hZ2UgPSBwb3N0ZXJzWzBdLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJpbWciKVswXS5nZXRBdHRyaWJ1dGUoImRhdGEtc3JjIikKICAgICAgICB2YXIgcXVhbGl0eUVsZW1lbnQgPSBwb3N0ZXJzWzBdLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoInBpY2sgZmlsbS1wb3N0ZXItcXVhbGl0eSIpCiAgICAgICAgaWYgKHF1YWxpdHlFbGVtZW50Lmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgcXVhbGl0eSA9IHF1YWxpdHlFbGVtZW50WzBdLnRleHRDb250ZW50CiAgICAgICAgfQogICAgfQogICAgcmVsZWFzZURhdGUgPSBub2RlLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImZkaS1pdGVtIilbMF0udGV4dENvbnRlbnQKICAgIHR5cGUgPSBub2RlLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImZsb2F0LXJpZ2h0IGZkaS10eXBlIilbMF0udGV4dENvbnRlbnQKICAgIGlmICh0eXBlID09ICJUViIgJiYgbm9kZS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJmZGktaXRlbSIpLmxlbmd0aCA+IDEpewogICAgICAgIGxldCBzZWFzb24gPSByZWxlYXNlRGF0ZS5yZXBsYWNlKCJTUyAiLCAiUyIpCiAgICAgICAgbGV0IGVwaXNvZGUgPSBub2RlLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImZkaS1pdGVtIilbMV0udGV4dENvbnRlbnQucmVwbGFjZSgiRVBTICIsICJFIikKICAgICAgICByZWxlYXNlRGF0ZSA9IHNlYXNvbiArIGVwaXNvZGUKICAgIH0KICAgIHZhciBtZWRpYSA9IHsKICAgICAgICBpZDogaWQsCiAgICAgICAgdGl0bGU6IHRpdGxlLAogICAgICAgIHVybDogdXJsLAogICAgICAgIGltYWdlOiBpbWFnZSwKICAgICAgICByZWxlYXNlRGF0ZTogcmVsZWFzZURhdGUsCiAgICAgICAgcXVhbGl0eTogcXVhbGl0eSwKICAgICAgICB0eXBlOiB0eXBlCiAgICB9CiAgICByZXR1cm4gbWVkaWEKfQoKZnVuY3Rpb24gZ2V0TWVkaWFzQnlUaXRsZSh0aXRsZU5hbWUpIHsKICAgIHZhciBub2RlcyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImJsb2NrX2FyZWEgYmxvY2tfYXJlYV9ob21lIHNlY3Rpb24taWQtMDIiKQogICAgZm9yIChub2RlIG9mIG5vZGVzKSB7CiAgICAgICAgdmFyIHRpdGxlID0gbm9kZS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJjYXQtaGVhZGluZyIpWzBdLnRleHRDb250ZW50CiAgICAgICAgaWYgKHRpdGxlLnRvTG93ZXJDYXNlKCkgPT0gdGl0bGVOYW1lLnRvTG93ZXJDYXNlKCkpIHsKICAgICAgICAgICAgcmV0dXJuIGdldE1lZGlhcyhub2RlLCAiZmx3LWl0ZW0iKQogICAgICAgIH0KICAgIH0KfQoKZnVuY3Rpb24gZ2V0TWVkaWFzKGVsZW1lbnQsIGNsYXNzTmFtZSkgewogICAgdmFyIG1lZGlhcyA9IFtdCiAgICB2YXIgbm9kZXMgPSBlbGVtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoY2xhc3NOYW1lKQogICAgZm9yIChub2RlIG9mIG5vZGVzKSB7CiAgICAgICAgdmFyIG1lZGlhID0gZ2V0TWVkaWEobm9kZSkKICAgICAgICBtZWRpYXMucHVzaChtZWRpYSkKICAgIH0KICAgIHJldHVybiBtZWRpYXMKfQoKZnVuY3Rpb24gZ2V0R2VucmVzKCl7CiAgICB2YXIgZ2VucmVzID0gW10KICAgIHZhciBlbGVtZW50cyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJzaWRlYmFyX3N1YnNfZ2VucmUiKS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJuYXYtbGluayIpCiAgICBmb3IgKGVsZW1lbnQgb2YgZWxlbWVudHMpIHsKICAgICAgICB2YXIgZ2VucmUgPSBnZXRHZW5yZShlbGVtZW50KQogICAgICAgIGdlbnJlcy5wdXNoKGdlbnJlKQogICAgfQogICAgcmV0dXJuIGdlbnJlcwp9CgpmdW5jdGlvbiBnZXRHZW5yZShlbGVtZW50KSB7CiAgICB2YXIgZ2VucmUgPSB7CiAgICAgICAgaWQ6IGVsZW1lbnQuaHJlZiwKICAgICAgICB0aXRsZTogZWxlbWVudC50ZXh0Q29udGVudAogICAgfQogICAgcmV0dXJuIGdlbnJlCn0KZnVuY3Rpb24gZ2V0Q291bnRyaWVzKCl7CiAgICB2YXIgY291bnRyaWVzID0gW10KICAgIHZhciBlbGVtZW50cyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJzaWRlYmFyX3N1YnNfY291bnRyeSIpLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoIm5hdi1saW5rIikKICAgIGZvciAoZWxlbWVudCBvZiBlbGVtZW50cykgewogICAgICAgIHZhciBjb3VudHJ5ID0gZ2V0Q291bnRyeShlbGVtZW50KQogICAgICAgIGNvdW50cmllcy5wdXNoKGNvdW50cnkpCiAgICB9CiAgICByZXR1cm4gY291bnRyaWVzCn0KCmZ1bmN0aW9uIGdldENvdW50cnkoZWxlbWVudCkgewogICAgdmFyIGNvdW50cnkgPSB7CiAgICAgICAgaWQ6IGVsZW1lbnQuaHJlZiwKICAgICAgICB0aXRsZTogZWxlbWVudC50ZXh0Q29udGVudCwKICAgICAgICBjb2RlOiBlbGVtZW50LmhyZWYuc3BsaXQoIi8iKS5wb3AoKQogICAgfQogICAgcmV0dXJuIGNvdW50cnkKfQ==",
    "list": "Z2V0U2VhcmNoUmVzdWx0cygpCgpmdW5jdGlvbiBnZXRTZWFyY2hSZXN1bHRzKCl7CiAgICB2YXIgbWVkaWFzID0gZ2V0TWVkaWFzKCkKICAgIAogICAgY29uc3QgdXJsUGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcyh3aW5kb3cubG9jYXRpb24uc2VhcmNoKQogICAgY29uc3QgcGFnZSA9IHVybFBhcmFtcy5nZXQoInBhZ2UiKQogICAgY29uc3QgaGFzTmV4dFBhZ2UgPSAobWVkaWFzLmxlbmd0aCA+IDAgPyB0cnVlIDogZmFsc2UpCiAgICAKICAgIHZhciByZXN1bHQgPSB7CiAgICAgICAgY3VycmVudFBhZ2U6IHBhZ2UsCiAgICAgICAgaGFzTmV4dFBhZ2U6IGhhc05leHRQYWdlLAogICAgICAgIHJlc3VsdHM6IG1lZGlhcywKICAgICAgICBmaWx0ZXI6IGdldEZpbHRlcigpCiAgICB9CiAgICBjb25zb2xlLmxvZyhKU09OLnN0cmluZ2lmeShyZXN1bHQpKQogICAgaWYgKGlPUygpID09IHRydWUpIHsKICAgICAgICB3aW5kb3cud2Via2l0Lm1lc3NhZ2VIYW5kbGVycy5zZWFyY2gucG9zdE1lc3NhZ2UoSlNPTi5zdHJpbmdpZnkocmVzdWx0KSkKICAgIH1lbHNlewogICAgICAgIHdpbmRvdy5zZWFyY2gucG9zdE1lc3NhZ2UoSlNPTi5zdHJpbmdpZnkocmVzdWx0KSkKICAgIH0KfQoKZnVuY3Rpb24gaU9TKCl7CiAgICBjb25zb2xlLmxvZyhuYXZpZ2F0b3IucGxhdGZvcm0pCiAgICByZXR1cm4gL2lQYWR8aVBob25lfGlQb2QvLnRlc3QobmF2aWdhdG9yLnBsYXRmb3JtKQp9CgpmdW5jdGlvbiBnZXRNZWRpYXMoKXsKICAgIHZhciBtZWRpYXMgPSBbXSAKICAgIHZhciBub2RlcyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImZsdy1pdGVtIikKICAgIGZvciAobm9kZSBvZiBub2RlcykgewogICAgICAgIHZhciBtZWRpYSA9IGdldE1lZGlhKG5vZGUpCiAgICAgICAgbWVkaWFzLnB1c2gobWVkaWEpCiAgICB9CiAgICByZXR1cm4gbWVkaWFzCn0KCmZ1bmN0aW9uIGdldE1lZGlhKG5vZGUpewogICAgbGV0IHBvc3RlcnMgPSBub2RlLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImZpbG0tcG9zdGVyIikKICAgIHZhciBpZCA9ICIiCiAgICB2YXIgdGl0bGUgPSAiIgogICAgdmFyIHVybCA9ICIiCiAgICB2YXIgaW1hZ2UgPSAiIgogICAgdmFyIHJlbGVhc2VEYXRlID0gIiIKICAgIHZhciBxdWFsaXR5ID0gIiIKICAgIHZhciB0eXBlID0gIiIKICAgIGlmIChwb3N0ZXJzLmxlbmd0aCA+IDApIHsKICAgICAgICBpZCA9IHBvc3RlcnNbMF0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoImEiKVswXS5nZXRBdHRyaWJ1dGUoImhyZWYiKQogICAgICAgIHRpdGxlID0gcG9zdGVyc1swXS5nZXRFbGVtZW50c0J5VGFnTmFtZSgiYSIpWzBdLnRpdGxlCiAgICAgICAgdXJsID0gcG9zdGVyc1swXS5nZXRFbGVtZW50c0J5VGFnTmFtZSgiYSIpWzBdLmhyZWYKICAgICAgICBpbWFnZSA9IHBvc3RlcnNbMF0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoImltZyIpWzBdLmdldEF0dHJpYnV0ZSgiZGF0YS1zcmMiKQogICAgICAgIHZhciBxdWFsaXR5RWxlbWVudCA9IHBvc3RlcnNbMF0uZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgicGljayBmaWxtLXBvc3Rlci1xdWFsaXR5IikKICAgICAgICBpZiAocXVhbGl0eUVsZW1lbnQubGVuZ3RoID4gMCkgewogICAgICAgICAgICBxdWFsaXR5ID0gcXVhbGl0eUVsZW1lbnRbMF0udGV4dENvbnRlbnQKICAgICAgICB9CiAgICB9CiAgICByZWxlYXNlRGF0ZSA9IG5vZGUuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiZmRpLWl0ZW0iKVswXS50ZXh0Q29udGVudAogICAgdHlwZSA9IG5vZGUuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiZmxvYXQtcmlnaHQgZmRpLXR5cGUiKVswXS50ZXh0Q29udGVudAogICAgaWYgKHR5cGUgPT0gIlRWIiAmJiBub2RlLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImZkaS1pdGVtIikubGVuZ3RoID4gMSl7CiAgICAgICAgbGV0IHNlYXNvbiA9IHJlbGVhc2VEYXRlLnJlcGxhY2UoIlNTICIsICJTIikKICAgICAgICBsZXQgZXBpc29kZSA9IG5vZGUuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiZmRpLWl0ZW0iKVsxXS50ZXh0Q29udGVudC5yZXBsYWNlKCJFUFMgIiwgIkUiKQogICAgICAgIHJlbGVhc2VEYXRlID0gc2Vhc29uICsgZXBpc29kZQogICAgfQogICAgdmFyIG1lZGlhID0gewogICAgICAgIGlkOiBpZCwKICAgICAgICB0aXRsZTogdGl0bGUsCiAgICAgICAgdXJsOiB1cmwsCiAgICAgICAgaW1hZ2U6IGltYWdlLAogICAgICAgIHJlbGVhc2VEYXRlOiByZWxlYXNlRGF0ZSwKICAgICAgICBxdWFsaXR5OiBxdWFsaXR5LAogICAgICAgIHR5cGU6IHR5cGUKICAgIH0KICAgIHJldHVybiBtZWRpYQp9CgpmdW5jdGlvbiBnZXRGaWx0ZXIoKSB7CiAgICB2YXIgY2F0ZWdvcnlFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiY2F0ZWdvcnlfZmlsdGVyLWNvbnRlbnQiKVswXQogICAgdmFyIGVsZW1lbnRzID0gY2F0ZWdvcnlFbGVtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoIm5pLWhlYWQiKQogICAgCiAgICB2YXIgZmlsdGVyID0gewogICAgICAgIHR5cGU6IHsKICAgICAgICAgICAgdGl0bGU6ICJUeXBlIiwKICAgICAgICAgICAgaXRlbXM6Z2V0RmlsdGVySXRlbXMoZWxlbWVudHMsICJUeXBlIikKICAgICAgICB9LAogICAgICAgIHF1YWxpdHk6IHsKICAgICAgICAgICAgdGl0bGU6ICJRdWFsaXR5IiwKICAgICAgICAgICAgaXRlbXM6IGdldEZpbHRlckl0ZW1zKGVsZW1lbnRzLCAiUXVhbGl0eSIpCiAgICAgICAgfSwKICAgICAgICByZWxlYXNlZDogewogICAgICAgICAgICB0aXRsZTogIlJlbGVhc2VkIiwKICAgICAgICAgICAgaXRlbXM6IGdldEZpbHRlckl0ZW1zKGVsZW1lbnRzLCAiUmVsZWFzZWQiKQogICAgICAgIH0sCiAgICAgICAgZ2VucmU6IHsKICAgICAgICAgICAgdGl0bGU6ICJHZW5yZSIsCiAgICAgICAgICAgIGl0ZW1zOiBnZXRGaWx0ZXJJdGVtcyhlbGVtZW50cywgIkdlbnJlIikKICAgICAgICB9LAogICAgICAgIGNvdW50cnk6IHsKICAgICAgICAgICAgdGl0bGU6ICJDb3VudHJ5IiwKICAgICAgICAgICAgaXRlbXM6IGdldEZpbHRlckl0ZW1zKGVsZW1lbnRzLCAiQ291bnRyeSIpCiAgICAgICAgfQogICAgfQogICAgcmV0dXJuIGZpbHRlcgp9CgpmdW5jdGlvbiBnZXRGaWx0ZXJJdGVtcyhlbGVtZW50cywgdGl0bGUpIHsKICAgIHZhciBzdWJFbGVtZW50cwogICAgZm9yIChlbGVtZW50IG9mIGVsZW1lbnRzKSB7CiAgICAgICAgaWYgKGVsZW1lbnQudGV4dENvbnRlbnQuaW5jbHVkZXModGl0bGUpID09IHRydWUpIHsKICAgICAgICAgICAgc3ViRWxlbWVudHMgPSBlbGVtZW50LnBhcmVudE5vZGUuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiZm9ybS1jaGVjayBmb3JtLWNoZWNrLWlubGluZSIpCiAgICAgICAgICAgIGJyZWFrCiAgICAgICAgfQogICAgfQogICAgdmFyIGl0ZW1zID0gW10KICAgIGZvciAoZWxlbWVudCBvZiBzdWJFbGVtZW50cykgewogICAgICAgIHZhciBpdGVtID0gZ2V0RmlsdGVySXRlbShlbGVtZW50KQogICAgICAgIGl0ZW1zLnB1c2goaXRlbSkKICAgIH0KICAgIHJldHVybiBpdGVtcwp9CgpmdW5jdGlvbiBnZXRGaWx0ZXJJdGVtKGVsZW1lbnQpIHsKICAgIHZhciBpbnB1dEVsZW1lbnQgPSBlbGVtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJpbnB1dCIpWzBdCiAgICB2YXIgbGFiZWxFbGVtZW50ID0gZWxlbWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgibGFiZWwiKVswXQogICAgdmFyIHR5cGUgPSBpbnB1dEVsZW1lbnQuZ2V0QXR0cmlidXRlKCJ0eXBlIikKICAgIHZhciBuYW1lID0gaW5wdXRFbGVtZW50LmdldEF0dHJpYnV0ZSgibmFtZSIpCiAgICBpZiAobmFtZSA9PSAiY291bnRyaWVzW10iKSB7CiAgICAgICAgbmFtZSA9ICJjb3VudHJ5IgogICAgfSBlbHNlIGlmIChuYW1lID09ICJnZW5yZXNbXSIpIHsKICAgICAgICBuYW1lID0gImdlbnJlIgogICAgfQogICAgdmFyIHZhbHVlID0gaW5wdXRFbGVtZW50LmdldEF0dHJpYnV0ZSgidmFsdWUiKQogICAgdmFyIHRpdGxlID0gbGFiZWxFbGVtZW50LnRleHRDb250ZW50CiAgICB2YXIgaXNTZWxlY3RlZCA9IGZhbHNlCiAgICBpZiAodmFsdWUgPT0gImFsbCIpIHsKICAgICAgICBpc1NlbGVjdGVkID0gdHJ1ZQogICAgfQogICAgdmFyIGl0ZW0gPSB7CiAgICAgICAgaWQ6IHZhbHVlLAogICAgICAgIHR5cGU6IHR5cGUsCiAgICAgICAgaWQ6IHZhbHVlLAogICAgICAgIG5hbWU6IG5hbWUsIAogICAgICAgIHZhbHVlOiB2YWx1ZSwgCiAgICAgICAgdGl0bGU6IHRpdGxlLAogICAgICAgIGlzU2VsZWN0ZWQ6IGlzU2VsZWN0ZWQKICAgIH0KICAgIHJldHVybiBpdGVtCn0=",
    "detail": "dmFyIHRpZCA9IHNldEludGVydmFsKCBmdW5jdGlvbiAoKSB7CiAgICBpZiAoZG9jdW1lbnQucmVhZHlTdGF0ZSAhPSAiY29tcGxldGUiKSB7CiAgICAgICAgcmV0dXJuCiAgICB9CiAgICBpZiAod2luZG93LmxvY2F0aW9uLnRvU3RyaW5nKCkuaW5jbHVkZXMoIi90di8iKSA9PSB0cnVlKSB7CiAgICAgICAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiY29udGVudC1lcGlzb2RlcyIpCiAgICAgICAgaWYgKHR5cGVvZihlbGVtZW50KSA9PSAndW5kZWZpbmVkJyB8fCBlbGVtZW50ID09IG51bGwpIHsKICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgfQogICAgICAgIHZhciBlbGVtZW50cyA9IGVsZW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgibmF2LWl0ZW0iKQogICAgICAgIGlmIChlbGVtZW50cy5sZW5ndGggPT0gMCkgewogICAgICAgICAgICByZXR1cm4KICAgICAgICB9CiAgICB9CiAgICBjbGVhckludGVydmFsKCB0aWQgKQogICAgdmFyIG1lZGlhID0gZ2V0TWVkaWEoKQogICAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkobWVkaWEpKQogICAgaWYgKGlPUygpID09IHRydWUpIHsKICAgICAgICB3aW5kb3cud2Via2l0Lm1lc3NhZ2VIYW5kbGVycy5kZXRhaWwucG9zdE1lc3NhZ2UoSlNPTi5zdHJpbmdpZnkobWVkaWEpKQogICAgfWVsc2V7CiAgICAgICAgd2luZG93LmRldGFpbC5wb3N0TWVzc2FnZShKU09OLnN0cmluZ2lmeShtZWRpYSkpCiAgICB9Cn0sIDEwMCApCgpmdW5jdGlvbiBpT1MoKXsKICAgIGNvbnNvbGUubG9nKG5hdmlnYXRvci5wbGF0Zm9ybSkKICAgIHJldHVybiAvaVBhZHxpUGhvbmV8aVBvZC8udGVzdChuYXZpZ2F0b3IucGxhdGZvcm0pCn0KCgpmdW5jdGlvbiBnZXRNZWRpYSgpewogICAgdmFyIGlkID0gd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lCiAgICB2YXIgdGl0bGUgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJmaWxtLXBvc3Rlci1pbWciKVswXS50aXRsZQogICAgdmFyIHVybCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImhlYWRpbmctbmFtZSIpWzBdLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJhIilbMF0uaHJlZgogICAgdmFyIGltYWdlID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiZmlsbS1wb3N0ZXItaW1nIilbMF0uc3JjCiAgICB2YXIgcXVhbGl0eSA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImJ0biBidG4tc20gYnRuLXF1YWxpdHkiKVswXS50ZXh0Q29udGVudAogICAgaWYgKHF1YWxpdHkgPT0gIk4vQSIpIHsKICAgICAgICBxdWFsaXR5ID0gIiIKICAgIH0KICAgIHZhciBkZXNjcmlwdGlvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImRlc2NyaXB0aW9uIilbMF0udGV4dENvbnRlbnQudHJpbSgpCiAgICB2YXIgdHlwZSA9ICJNb3ZpZSIKICAgIGlmICh1cmwuaW5jbHVkZXMoIi90di8iKSkgewogICAgICAgIHR5cGUgPSAiVFYiCiAgICB9CiAgICB2YXIgcmVsZWFzZURhdGUgPSB2YWx1ZUZyb21UaXRsZSgiUmVsZWFzZWQ6IiwgZmFsc2UpCiAgICB2YXIgZ2VucmVzID0gdmFsdWVGcm9tVGl0bGUoIkdlbnJlOiIsIHRydWUpCiAgICB2YXIgY2FzdHMgPSB2YWx1ZUZyb21UaXRsZSgiQ2FzdHM6IiwgdHJ1ZSkKICAgIHZhciB0YWdzID0gZ2V0VGFncygpCiAgICB2YXIgcHJvZHVjdGlvbiA9IHZhbHVlRnJvbVRpdGxlKCJQcm9kdWN0aW9uOiIsIGZhbHNlKS50b1N0cmluZygpLnJlcGxhY2UoIiwiLCAiLCAiKQogICAgdmFyIGR1cmF0aW9uID0gdmFsdWVGcm9tVGl0bGUoIkR1cmF0aW9uOiIsIGZhbHNlKQogICAgdmFyIHJhdGluZyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoIml0ZW0gbXItMiIpWzBdLnRleHRDb250ZW50LnJlcGxhY2UoIklNREI6IiwgIiIpLnRyaW0oKQogICAgdmFyIGVwaXNvZGVzID0gW10KICAgIHZhciBzZWFzb25zID0gW10KICAgIGlmICh0eXBlID09ICJUViIpIHsKICAgICAgICBlcGlzb2RlcyA9IGdldEVwaXNvZGVzKCkKICAgICAgICBzZWFzb25zID0gZ2V0U2Vhc29ucyhlcGlzb2RlcykKICAgIH0gZWxzZSB7CiAgICAgICAgZXBpc29kZXMgPSBbZ2V0TW92aWVFcGlzb2RlKCldCiAgICAgICAgc2Vhc29ucyA9IFtnZXRNb3ZpZVNlYXNvbihlcGlzb2RlcyldCiAgICB9CiAgICAKICAgIHZhciByZWxhdGVkID0gZ2V0UmVsYXRlZE1lZGlhcygpCiAgICB2YXIgbWVkaWEgPSB7CiAgICAgICAgaWQ6IGlkLAogICAgICAgIHRpdGxlOiB0aXRsZSwKICAgICAgICB1cmw6IHVybCwKICAgICAgICBpbWFnZTogaW1hZ2UsCiAgICAgICAgcXVhbGl0eTogcXVhbGl0eSwKICAgICAgICBkZXNjcmlwdGlvbjogZGVzY3JpcHRpb24sCiAgICAgICAgdHlwZTogdHlwZSwKICAgICAgICByZWxlYXNlRGF0ZTogcmVsZWFzZURhdGUsCiAgICAgICAgZ2VucmVzOiBnZW5yZXMsCiAgICAgICAgY2FzdHM6IGNhc3RzLAogICAgICAgIHRhZ3M6IHRhZ3MsCiAgICAgICAgcHJvZHVjdGlvbjogcHJvZHVjdGlvbiwKICAgICAgICBkdXJhdGlvbjogZHVyYXRpb24sCiAgICAgICAgcmF0aW5nOiBwYXJzZUZsb2F0KHJhdGluZyksCiAgICAgICAgc2Vhc29uczogc2Vhc29ucywKICAgICAgICByZWxhdGVkOiByZWxhdGVkCiAgICB9CiAgICByZXR1cm4gbWVkaWEKfQoKZnVuY3Rpb24gdmFsdWVGcm9tVGl0bGUodGl0bGUsIGlzQXJyYXkpIHsKICAgIHZhciBlbGVtZW50cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoInJvdy1saW5lIikKICAgIGZvciAoZWxlbWVudCBvZiBlbGVtZW50cyl7CiAgICAgICAgdmFyIHRleHQgPSBlbGVtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJzdHJvbmciKVswXS50ZXh0Q29udGVudAogICAgICAgIGlmICh0ZXh0LmluY2x1ZGVzKHRpdGxlKSl7CiAgICAgICAgICAgIHRleHQgPSBlbGVtZW50LnRleHRDb250ZW50LnJlcGxhY2UodGl0bGUsICIiKQogICAgICAgICAgICB0ZXh0ID0gdGV4dC5yZXBsYWNlKC9cbnxcci9nLCAiIikudHJpbSgpLnJlcGxhY2UoLyArKD89ICkvZywiIikKICAgICAgICAgICAgaWYgKHRleHQuaW5jbHVkZXMoIiwiKSl7CiAgICAgICAgICAgICAgICB0ZXh0ID0gdGV4dC5yZXBsYWNlKC8sIC9nLCAiLCIpCiAgICAgICAgICAgICAgICByZXR1cm4gdGV4dC5zcGxpdCgiLCIpCiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKGlzQXJyYXkgPT0gdHJ1ZSkgewogICAgICAgICAgICAgICAgcmV0dXJuIHRleHQuc3BsaXQoKQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB0ZXh0CiAgICAgICAgfQogICAgfQp9CgpmdW5jdGlvbiBnZXRUYWdzKCkgewogICAgdmFyIHRhZ3MgPSBbXQogICAgdmFyIGVsZW1lbnRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiZGV0YWlsLXRhZ3MgbWItMyIpWzBdLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJoMiIpCiAgICBmb3IgKGVsZW1lbnQgb2YgZWxlbWVudHMpewogICAgICAgIHZhciB0YWcgPSBlbGVtZW50LnRleHRDb250ZW50CiAgICAgICAgdGFncy5wdXNoKHRhZykKICAgIH0KICAgIHJldHVybiB0YWdzCn0KCmZ1bmN0aW9uIGdldEVwaXNvZGVzKCkgewogICAgdmFyIGVwaXNvZGVzID0gW10KICAgIHZhciBlbGVtZW50cyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJjb250ZW50LWVwaXNvZGVzIikuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgibmF2LWl0ZW0iKQogICAgZm9yIChlbGVtZW50IG9mIGVsZW1lbnRzKSB7CiAgICAgICAgdmFyIGVwaXNvZGUgPSBnZXRFcGlzb2RlKGVsZW1lbnQsIDApCiAgICAgICAgZXBpc29kZXMucHVzaChlcGlzb2RlKQogICAgfQogICAgcmV0dXJuIGVwaXNvZGVzCn0KCmZ1bmN0aW9uIGdldEVwaXNvZGVzQnlTZWFzb24oc2Vhc29uKSB7CiAgICB2YXIgZXBpc29kZXMgPSBbXQogICAgdmFyIGVsZW1lbnRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgibmF2LWl0ZW0iKQogICAgZm9yIChlbGVtZW50IG9mIGVsZW1lbnRzKSB7CiAgICAgICAgdmFyIGVwaXNvZGUgPSBnZXRFcGlzb2RlKGVsZW1lbnQsIHNlYXNvbikKICAgICAgICBlcGlzb2Rlcy5wdXNoKGVwaXNvZGUpCiAgICB9CiAgICByZXR1cm4gZXBpc29kZXMKfQoKZnVuY3Rpb24gZ2V0RXBpc29kZShlbGVtZW50LCBzZWFzb25OdW1iZXIpIHsKICAgIHZhciBpZCA9IGVsZW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImEiKVswXS5nZXRBdHRyaWJ1dGUoImRhdGEtaWQiKQogICAgdmFyIHRpdGxlID0gZWxlbWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiYSIpWzBdLnRpdGxlCiAgICB2YXIgbnVtYmVyID0gZWxlbWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgic3Ryb25nIilbMF0udGV4dENvbnRlbnQubWF0Y2goL1xkKy8pWzBdCiAgICB2YXIgc2Vhc29uID0gc2Vhc29uTnVtYmVyCiAgICBpZiAoc2Vhc29uID09IDApIHsKICAgICAgICBzZWFzb24gPSBwYXJzZUludChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiY3VycmVudC1zZWFzb24iKS50ZXh0Q29udGVudC5tYXRjaCgvXGQrLylbMF0pCiAgICB9CiAgICB2YXIgdXJsID0gd2luZG93LmxvY2F0aW9uLm9yaWdpbiArICIvYWpheC92Mi9lcGlzb2RlL3NlcnZlcnMvIiArIGlkCiAgICB2YXIgZXBpc29kZSA9IHsKICAgICAgICBpZDogaWQsCiAgICAgICAgdGl0bGU6IHRpdGxlLAogICAgICAgIG51bWJlcjogcGFyc2VJbnQobnVtYmVyKSwKICAgICAgICBzZWFzb246IHNlYXNvbiwKICAgICAgICB1cmw6IHVybAogICAgfQogICAgcmV0dXJuIGVwaXNvZGUKfQoKZnVuY3Rpb24gZ2V0TW92aWVFcGlzb2RlKCkgewogICAgdmFyIGlkID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiZGV0YWlsX3BhZ2Utd2F0Y2giKVswXS5nZXRBdHRyaWJ1dGUoImRhdGEtaWQiKQogICAgdmFyIHRpdGxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiaGVhZGluZy1uYW1lIilbMF0udGV4dENvbnRlbnQKICAgIHZhciBudW1iZXIgPSAwCiAgICB2YXIgc2Vhc29uID0gMAogICAgdmFyIHVybCA9IHdpbmRvdy5sb2NhdGlvbi5vcmlnaW4gKyAiL2FqYXgvbW92aWUvZXBpc29kZXMvIiArIGlkCiAgICB2YXIgZXBpc29kZSA9IHsKICAgICAgICBpZDogaWQsCiAgICAgICAgdGl0bGU6IHRpdGxlLAogICAgICAgIG51bWJlcjogcGFyc2VJbnQobnVtYmVyKSwKICAgICAgICBzZWFzb246IHNlYXNvbiwKICAgICAgICB1cmw6IHVybAogICAgfQogICAgcmV0dXJuIGVwaXNvZGUKfQoKZnVuY3Rpb24gZ2V0TW92aWVTZWFzb24oZXBpc29kZXMpIHsKICAgIHZhciBzZWFzb24gPSB7CiAgICAgICAgaWQ6ICIwIiwKICAgICAgICB0aXRsZTogIiIsCiAgICAgICAgbnVtYmVyOiAwLAogICAgICAgIHVybDogIiIsCiAgICAgICAgZXBpc29kZXM6IGVwaXNvZGVzCiAgICB9CiAgICByZXR1cm4gc2Vhc29uCn0KCmZ1bmN0aW9uIGdldFNlYXNvbnMoZXBpc29kZXMpIHsKICAgIHZhciBlcGlzb2RlID0gZXBpc29kZXNbMF0KICAgIHZhciBzZWFzb25zID0gW10KICAgIHZhciBlbGVtZW50cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoInNsdC1zZWFzb25zLWRyb3Bkb3duIilbMF0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoImEiKQogICAgZm9yIChlbGVtZW50IG9mIGVsZW1lbnRzKSB7CiAgICAgICAgdmFyIHNlYXNvbiA9IGdldFNlYXNvbihlbGVtZW50KQogICAgICAgIGlmIChzZWFzb24ubnVtYmVyID09IGVwaXNvZGUubnVtYmVyKSB7CiAgICAgICAgICAgIHNlYXNvbi5lcGlzb2RlcyA9IGVwaXNvZGVzCiAgICAgICAgfQogICAgICAgIHNlYXNvbnMucHVzaChzZWFzb24pCiAgICB9CiAgICByZXR1cm4gc2Vhc29ucwp9CgpmdW5jdGlvbiBnZXRTZWFzb24oZWxlbWVudCkgewogICAgdmFyIGlkID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoImRhdGEtaWQiKQogICAgdmFyIHRpdGxlID0gZWxlbWVudC50ZXh0Q29udGVudAogICAgdmFyIG51bWJlciA9IHRpdGxlLm1hdGNoKC9cZCsvKVswXQogICAgdmFyIHVybCA9IHdpbmRvdy5sb2NhdGlvbi5vcmlnaW4gKyAiL2FqYXgvdjIvc2Vhc29uL2VwaXNvZGVzLyIgKyBpZAogICAgdmFyIHNlYXNvbiA9IHsKICAgICAgICBpZDogaWQsCiAgICAgICAgdGl0bGU6IHRpdGxlLAogICAgICAgIG51bWJlcjogcGFyc2VJbnQobnVtYmVyKSwKICAgICAgICB1cmw6IHVybCwKICAgICAgICBlcGlzb2RlczogW10KICAgIH0KICAgIHJldHVybiBzZWFzb24KfQoKZnVuY3Rpb24gZ2V0UmVsYXRlZE1lZGlhcygpewogICAgdmFyIG1lZGlhcyA9IFtdCiAgICB2YXIgZWxlbWVudHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJmaWxtX3JlbGF0ZWQgZmlsZV9yZWFsdGVkLWxpc3QiKVswXS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJmbHctaXRlbSIpCiAgICBmb3IgKGVsZW1lbnQgb2YgZWxlbWVudHMpIHsKICAgICAgICB2YXIgbWVkaWEgPSBnZXRSZWxhdGVkTWVkaWEoZWxlbWVudCkKICAgICAgICBtZWRpYXMucHVzaChtZWRpYSkKICAgIH0KICAgIHJldHVybiBtZWRpYXMKfQoKZnVuY3Rpb24gZ2V0UmVsYXRlZE1lZGlhKG5vZGUpewogICAgbGV0IHBvc3RlcnMgPSBub2RlLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImZpbG0tcG9zdGVyIikKICAgIHZhciBpZCA9ICIiCiAgICB2YXIgdGl0bGUgPSAiIgogICAgdmFyIHVybCA9ICIiCiAgICB2YXIgaW1hZ2UgPSAiIgogICAgdmFyIHJlbGVhc2VEYXRlID0gIiIKICAgIHZhciBxdWFsaXR5ID0gIiIKICAgIHZhciB0eXBlID0gIiIKICAgIGlmIChwb3N0ZXJzLmxlbmd0aCA+IDApIHsKICAgICAgICBpZCA9IHBvc3RlcnNbMF0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoImEiKVswXS5nZXRBdHRyaWJ1dGUoImhyZWYiKQogICAgICAgIHRpdGxlID0gcG9zdGVyc1swXS5nZXRFbGVtZW50c0J5VGFnTmFtZSgiYSIpWzBdLnRpdGxlCiAgICAgICAgdXJsID0gcG9zdGVyc1swXS5nZXRFbGVtZW50c0J5VGFnTmFtZSgiYSIpWzBdLmhyZWYKICAgICAgICBpbWFnZSA9IHBvc3RlcnNbMF0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoImltZyIpWzBdLmdldEF0dHJpYnV0ZSgiZGF0YS1zcmMiKQogICAgICAgIHZhciBxdWFsaXR5RWxlbWVudCA9IHBvc3RlcnNbMF0uZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgicGljayBmaWxtLXBvc3Rlci1xdWFsaXR5IikKICAgICAgICBpZiAocXVhbGl0eUVsZW1lbnQubGVuZ3RoID4gMCkgewogICAgICAgICAgICBxdWFsaXR5ID0gcXVhbGl0eUVsZW1lbnRbMF0udGV4dENvbnRlbnQKICAgICAgICB9CiAgICB9CiAgICByZWxlYXNlRGF0ZSA9IG5vZGUuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiZmRpLWl0ZW0iKVswXS50ZXh0Q29udGVudAogICAgdHlwZSA9IG5vZGUuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiZmxvYXQtcmlnaHQgZmRpLXR5cGUiKVswXS50ZXh0Q29udGVudAogICAgaWYgKHR5cGUgPT0gIlRWIiAmJiBub2RlLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImZkaS1pdGVtIikubGVuZ3RoID4gMSl7CiAgICAgICAgbGV0IHNlYXNvbiA9IHJlbGVhc2VEYXRlLnJlcGxhY2UoIlNTICIsICJTIikKICAgICAgICBsZXQgZXBpc29kZSA9IG5vZGUuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiZmRpLWl0ZW0iKVsxXS50ZXh0Q29udGVudC5yZXBsYWNlKCJFUFMgIiwgIkUiKQogICAgICAgIHJlbGVhc2VEYXRlID0gc2Vhc29uICsgZXBpc29kZQogICAgfQogICAgdmFyIG1lZGlhID0gewogICAgICAgIGlkOiBpZCwKICAgICAgICB0aXRsZTogdGl0bGUsCiAgICAgICAgdXJsOiB1cmwsCiAgICAgICAgaW1hZ2U6IGltYWdlLAogICAgICAgIHJlbGVhc2VEYXRlOiByZWxlYXNlRGF0ZSwKICAgICAgICBxdWFsaXR5OiBxdWFsaXR5LAogICAgICAgIHR5cGU6IHR5cGUKICAgIH0KICAgIHJldHVybiBtZWRpYQp9Cg==",
    "episodes": "dmFyIHJlc3VsdCA9IGdldEVwaXNvZGVzKCkKY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkocmVzdWx0KSkKCmlmIChpT1MoKSA9PSB0cnVlKSB7CiAgICB3aW5kb3cud2Via2l0Lm1lc3NhZ2VIYW5kbGVycy5lcGlzb2Rlcy5wb3N0TWVzc2FnZShKU09OLnN0cmluZ2lmeShyZXN1bHQpKQp9ZWxzZXsKICAgIHdpbmRvdy5lcGlzb2Rlcy5wb3N0TWVzc2FnZShKU09OLnN0cmluZ2lmeShyZXN1bHQpKQp9CgpmdW5jdGlvbiBpT1MoKXsKICAgIGNvbnNvbGUubG9nKG5hdmlnYXRvci5wbGF0Zm9ybSkKICAgIHJldHVybiAvaVBhZHxpUGhvbmV8aVBvZC8udGVzdChuYXZpZ2F0b3IucGxhdGZvcm0pCn0KCmZ1bmN0aW9uIGdldEVwaXNvZGVzKCkgewogICAgdmFyIGVwaXNvZGVzID0gW10KICAgIHZhciBlbGVtZW50cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoIm5hdi1pdGVtIikKICAgIGZvciAoZWxlbWVudCBvZiBlbGVtZW50cykgewogICAgICAgIHZhciBlcGlzb2RlID0gZ2V0RXBpc29kZShlbGVtZW50LCAwKQogICAgICAgIGVwaXNvZGVzLnB1c2goZXBpc29kZSkKICAgIH0KICAgIHJldHVybiBlcGlzb2Rlcwp9CiAgICAKZnVuY3Rpb24gZ2V0RXBpc29kZShlbGVtZW50LCBzZWFzb25OdW1iZXIpIHsKICAgIHZhciBpZCA9IGVsZW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImEiKVswXS5nZXRBdHRyaWJ1dGUoImRhdGEtaWQiKQogICAgdmFyIHRpdGxlID0gZWxlbWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiYSIpWzBdLnRpdGxlCiAgICB2YXIgbnVtYmVyID0gZWxlbWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgic3Ryb25nIilbMF0udGV4dENvbnRlbnQubWF0Y2goL1xkKy8pWzBdCiAgICB2YXIgc2Vhc29uID0gc2Vhc29uTnVtYmVyCiAgICB2YXIgdXJsID0gd2luZG93LmxvY2F0aW9uLm9yaWdpbiArICIvYWpheC92Mi9lcGlzb2RlL3NlcnZlcnMvIiArIGlkCiAgICB2YXIgZXBpc29kZSA9IHsKICAgICAgICBpZDogaWQsCiAgICAgICAgdGl0bGU6IHRpdGxlLAogICAgICAgIG51bWJlcjogcGFyc2VJbnQobnVtYmVyKSwKICAgICAgICBzZWFzb246IHNlYXNvbiwKICAgICAgICB1cmw6IHVybAogICAgfQogICAgcmV0dXJuIGVwaXNvZGUKfQ==",
    "servers": "Z2V0U2VydmVycygpLnRoZW4oCiAgICBmdW5jdGlvbih2YWx1ZSl7CiAgICAgICAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkodmFsdWUpKQogICAgICAgIGlmIChpT1MoKSA9PSB0cnVlKSB7CiAgICAgICAgICAgIHdpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzLnNlcnZlcnMucG9zdE1lc3NhZ2UoSlNPTi5zdHJpbmdpZnkodmFsdWUpKQogICAgICAgIH1lbHNlewogICAgICAgICAgICB3aW5kb3cuc2VydmVycy5wb3N0TWVzc2FnZShKU09OLnN0cmluZ2lmeSh2YWx1ZSkpCiAgICAgICAgfQogICAgfQopCgpmdW5jdGlvbiBpT1MoKXsKICAgIGNvbnNvbGUubG9nKG5hdmlnYXRvci5wbGF0Zm9ybSkKICAgIHJldHVybiAvaVBhZHxpUGhvbmV8aVBvZC8udGVzdChuYXZpZ2F0b3IucGxhdGZvcm0pCn0KCgphc3luYyBmdW5jdGlvbiBnZXRTZXJ2ZXJzKCkgewogICAgdmFyIHNlcnZlcnMgPSBbXQogICAgdmFyIG5vZGVzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgibmF2LWl0ZW0iKQogICAgZm9yIChub2RlIG9mIG5vZGVzKXsKICAgICAgICB2YXIgdGFnQSA9IG5vZGUuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImEiKVswXQogICAgICAgIHZhciBpZCA9IHRhZ0EuZ2V0QXR0cmlidXRlKCJkYXRhLWlkIikKCiAgICAgICAgdmFyIHRhZ1NwYW4gPSBub2RlLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJzcGFuIilbMF0KICAgICAgICBsZXQgdGl0bGUgPSB0YWdTcGFuLnRleHRDb250ZW50CgogICAgICAgIGxldCB1cmwgPSB3aW5kb3cubG9jYXRpb24ub3JpZ2luICsgIi9hamF4L3NvdXJjZXMvIiArIGlkCgogICAgICAgIGxldCBzb3VyY2VzVXJsID0gIiIKICAgICAgICBsZXQgc3VidGl0bGVzVXJsID0gIiIKICAgICAgICBsZXQgdXNlckFnZW50ID0gIk1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE1XzcpIEFwcGxlV2ViS2l0LzYwNS4xLjE1IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi8xNS4zIFNhZmFyaS82MDUuMS4xNSIKICAgICAgICBsZXQgaGVhZGVycyA9IHsKICAgICAgICAgICAgVXNlckFnZW50OiB1c2VyQWdlbnQsCiAgICAgICAgICAgIFhSZXF1ZXN0ZWRXaXRoOiAiWE1MSHR0cFJlcXVlc3QiCiAgICAgICAgfQogICAgICAgIGxldCBzb3VyY2VzID0gW10KICAgICAgICBsZXQgc3VidGl0bGVzID0gW10KICAgICAgICBsZXQgcGF0dGVyblNvdXJjZUlkCiAgICAgICAgCiAgICAgICAgdmFyIHVwY2xvdWRUaXRsZSA9ICJ1cGNsb3VkIgogICAgICAgIHZhciB2aWRjbG91ZFRpdGxlID0gInZpZGNsb3VkIgoKICAgICAgICB2YXIgYWNjZXB0U2VydmVyID0gZmFsc2UKICAgICAgICBpZiAodGl0bGUudG9Mb3dlckNhc2UoKS5sb2NhbGVDb21wYXJlKHVwY2xvdWRUaXRsZSkgPT0gMCkgewogICAgICAgICAgICBoZWFkZXJzLlJlZmVyZXIgPSAiaHR0cHM6Ly9kb2tpY2xvdWQub25lLyIKICAgICAgICAgICAgYWNjZXB0U2VydmVyID0gdHJ1ZQogICAgICAgIH1lbHNlIGlmICh0aXRsZS50b0xvd2VyQ2FzZSgpLmxvY2FsZUNvbXBhcmUodmlkY2xvdWRUaXRsZSkgPT0gMCkgewogICAgICAgICAgICBoZWFkZXJzLlJlZmVyZXIgPSAiaHR0cHM6Ly9yYWJiaXRzdHJlYW0ubmV0LyIKICAgICAgICAgICAgYWNjZXB0U2VydmVyID0gdHJ1ZQogICAgICAgIH0KCiAgICAgICAgdmFyIHNlcnZlciA9IHsKICAgICAgICAgICAgaWQ6IGlkLAogICAgICAgICAgICB0aXRsZTogdGl0bGUsCiAgICAgICAgICAgIHVybDogdXJsLAogICAgICAgICAgICBzb3VyY2VzVXJsOiBzb3VyY2VzVXJsLAogICAgICAgICAgICBzdWJ0aXRsZXNVcmw6IHN1YnRpdGxlc1VybCwKICAgICAgICAgICAgaGVhZGVyczogaGVhZGVycywKICAgICAgICAgICAgc291cmNlczogc291cmNlcywKICAgICAgICAgICAgc3VidGl0bGVzOiBzdWJ0aXRsZXMKICAgICAgICB9CiAgICAgICAgaWYgKGFjY2VwdFNlcnZlciA9PSB0cnVlKSB7CiAgICAgICAgICAgIHNlcnZlcnMucHVzaChzZXJ2ZXIpCiAgICAgICAgfQogICAgfQogICAgCiAgICB2YXIgc2VydmVyVGl0bGVzID0gW3VwY2xvdWRUaXRsZSwgdmlkY2xvdWRUaXRsZV0KICAgIGZvciAodGl0bGUgb2Ygc2VydmVyVGl0bGVzKSB7CiAgICAgICAgZm9yIChzZXJ2ZXIgb2Ygc2VydmVycykgewogICAgICAgICAgICBpZiAoc2VydmVyLnRpdGxlLnRvTG93ZXJDYXNlKCkubG9jYWxlQ29tcGFyZSh0aXRsZSkgPT0gMCkgewogICAgICAgICAgICAgICAgbGV0IGluZGV4ID0gc2VydmVycy5pbmRleE9mKHNlcnZlcikKICAgICAgICAgICAgICAgIHNlcnZlciA9IGF3YWl0IHNlcnZlckRldGFpbChzZXJ2ZXIpCiAgICAgICAgICAgICAgICBpZiAodGl0bGUubG9jYWxlQ29tcGFyZSh1cGNsb3VkVGl0bGUpID09IDApIHsKICAgICAgICAgICAgICAgICAgICBzZXJ2ZXIuc3VidGl0bGVzVXJsID0gKG5ldyBVcENsb3VkKCkpLmdldFN1YnRpdGxlc1VybChzZXJ2ZXIuc291cmNlc1VybCkKICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodGl0bGUubG9jYWxlQ29tcGFyZSh2aWRjbG91ZFRpdGxlKSA9PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgc2VydmVyLnN1YnRpdGxlc1VybCA9IChuZXcgVmlkQ2xvdWQoKSkuZ2V0U3VidGl0bGVzVXJsKHNlcnZlci5zb3VyY2VzVXJsKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgc2VydmVyc1tpbmRleF0gPSBzZXJ2ZXIKICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CiAgICAKICAgIHJldHVybiBzZXJ2ZXJzCn0KCmZ1bmN0aW9uIGdldERlZmF1bHRTZXZlcihzZXJ2ZXJzLCBkZWZhdWx0U2VydmVyVGl0bGUpIHsKICAgIHZhciBkZWZhdWx0U2VydmVyCiAgICBmb3IgKHNlcnZlciBvZiBzZXJ2ZXJzKSB7CiAgICAgICAgaWYgKHNlcnZlci50aXRsZS50b0xvd2VyQ2FzZSgpLmxvY2FsZUNvbXBhcmUoZGVmYXVsdFNlcnZlclRpdGxlKSA9PSAwKSB7CiAgICAgICAgICAgIGRlZmF1bHRTZXJ2ZXIgPSBzZXJ2ZXIKICAgICAgICAgICAgYnJlYWsKICAgICAgICB9CiAgICB9CiAgICByZXR1cm4gZGVmYXVsdFNlcnZlcgp9CgoKYXN5bmMgZnVuY3Rpb24gc2VydmVyRGV0YWlsKHNlcnZlcikgewogICAgbGV0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goc2VydmVyLnVybCwgewogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgIlVzZXItQWdlbnQiOiAiTW96aWxsYS81LjAgKE1hY2ludG9zaDsgSW50ZWwgTWFjIE9TIFggMTBfMTVfNykgQXBwbGVXZWJLaXQvNjA1LjEuMTUgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzE1LjMgU2FmYXJpLzYwNS4xLjE1IgogICAgICAgIH0KICAgIH0pCiAgICBsZXQganNvbiA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKQogICAgc2VydmVyLnR5cGUgPSBqc29uLnR5cGUKICAgIHNlcnZlci5zb3VyY2VzVXJsID0ganNvbi5saW5rCiAgICByZXR1cm4gc2VydmVyCn0KCgpjbGFzcyBVcENsb3VkIHsKICAgIHN0cmVhbSgpIHsKICAgICAgICB2YXIgbGluayA9ICJodHRwczovL2hkdG9kYXkudHYvYWpheC9zb3VyY2VzLyIgKyBpZAogICAgICAgIHRoaXMuc291cmNlcyhsaW5rLCB0aGlzLmdldFNvdXJjZXMpCiAgICB9CiAgICBnZXRTdWJ0aXRsZXNVcmwoc291cmNlc1VybCkgewogICAgICAgIHZhciBzdWJ0aXRsZXNVcmwgPSAiaHR0cHM6Ly9kb2tpY2xvdWQub25lL2FqYXgvZW1iZWQtNC9nZXRTb3VyY2VzP2lkPSIgKyB0aGlzLmdldFNvdXJjZUlkKHNvdXJjZXNVcmwpCiAgICAgICAgcmV0dXJuIHN1YnRpdGxlc1VybAogICAgfQogICAgc291cmNlcyhsaW5rLCBjYWxsYmFjaykgewogICAgICAgIGZldGNoKGxpbmspCiAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCkKICAgICAgICB9KQogICAgICAgIC50aGVuKChkYXRhKSA9PiB7CiAgICAgICAgICAgIGNvbnN0IHNvdXJjZUlkID0gdGhpcy5zb3VyY2VJZChkYXRhLmxpbmspCiAgICAgICAgICAgIGNhbGxiYWNrKHNvdXJjZUlkKQogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKGZ1bmN0aW9uKCl7CiAgICAgICAgICAgIGNhbGxiYWNrKCIiKQogICAgICAgIH0pCiAgICB9CiAgICBnZXRTb3VyY2VJZChzb3VyY2VzVXJsKSB7CiAgICAgICAgY29uc3Qgc291cmNlSWQgPSBzb3VyY2VzVXJsLnNsaWNlKAogICAgICAgICAgICBzb3VyY2VzVXJsLmxhc3RJbmRleE9mKCIvIikgKyAxLAogICAgICAgICAgICBzb3VyY2VzVXJsLmluZGV4T2YoIj8iKQogICAgICAgICkKICAgICAgICByZXR1cm4gc291cmNlSWQKICAgIH0KICAgIGdldFNvdXJjZXMoc291cmNlSWQpIHsKICAgICAgICB2YXIgbGluayA9ICJodHRwczovL2Rva2ljbG91ZC5vbmUvYWpheC9lbWJlZC00L2dldFNvdXJjZXM/aWQ9IiArIHNvdXJjZUlkCiAgICAgICAgCiAgICAgICAgZmV0Y2gobGluaywgewogICAgICAgICAgICBtZXRob2Q6ICJHRVQiLAogICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAiWC1SZXF1ZXN0ZWQtV2l0aCI6ICJYTUxIdHRwUmVxdWVzdCIsCiAgICAgICAgICAgICAgICAiUmVmZXJlciI6ICJodHRwczovL2Rva2ljbG91ZC5vbmUvIiwKICAgICAgICAgICAgICAgICJVc2VyLUFnZW50IjogIk1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE1XzcpIEFwcGxlV2ViS2l0LzYwNS4xLjE1IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi8xNS4zIFNhZmFyaS82MDUuMS4xNSIsCiAgICAgICAgICAgICAgICAiQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luIjogIioiLAogICAgICAgICAgICAgICAgIkFjY2VwdC1FbmNvZGluZyI6ICJnemlwLCBkZWZsYXRlLCBiciIsCiAgICAgICAgICAgICAgICAiQWNjZXB0IjogImV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLCovKjtxPTAuOCIKICAgICAgICAgICAgfSwKICAgICAgICB9KQogICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpCiAgICAgICAgfSkKICAgICAgICAudGhlbigoZGF0YSkgPT4gewoKICAgICAgICB9KQogICAgICAgIC5jYXRjaChmdW5jdGlvbigpewogICAgICAgICAgICBjb25zb2xlLmxvZygiZXJyb3IiKQogICAgICAgIH0pCiAgICB9Cn0KY2xhc3MgVmlkQ2xvdWQgewogICAgZ2V0U3VidGl0bGVzVXJsKHNvdXJjZXNVcmwpIHsKICAgICAgICB2YXIgc3VidGl0bGVzVXJsID0gImh0dHBzOi8vcmFiYml0c3RyZWFtLm5ldC9hamF4L2VtYmVkLTQvZ2V0U291cmNlcz9pZD0iICsgdGhpcy5nZXRTb3VyY2VJZChzb3VyY2VzVXJsKQogICAgICAgIHJldHVybiBzdWJ0aXRsZXNVcmwKICAgIH0KICAgIGdldFNvdXJjZUlkKHNvdXJjZXNVcmwpIHsKICAgICAgICBjb25zdCBzb3VyY2VJZCA9IHNvdXJjZXNVcmwuc2xpY2UoCiAgICAgICAgICAgIHNvdXJjZXNVcmwubGFzdEluZGV4T2YoIi8iKSArIDEsCiAgICAgICAgICAgIHNvdXJjZXNVcmwuaW5kZXhPZigiPyIpCiAgICAgICAgKQogICAgICAgIHJldHVybiBzb3VyY2VJZAogICAgfQp9",
    "streams": ""
  },
  "apps": [
    {
      "icon": "https://is5-ssl.mzstatic.com/image/thumb/Purple122/v4/62/1c/bd/621cbdc9-6c5a-92ba-d96e-35ec09d16cc8/AppIcon-0-0-1x_U007emarketing-0-0-0-10-0-0-sRGB-0-0-0-GLES2_U002c0-512MB-85-220-0-0.png/492x0w.png",
      "name": "Apple News",
      "desc": "News + magazines, in one app",
      "url": "https://apps.apple.com/us/app/id1066498020",
      "get": "Install"
    },
    {
      "icon": "https://is1-ssl.mzstatic.com/image/thumb/Purple122/v4/e6/88/83/e688839f-1617-7df0-7423-97c2f1268f46/AppIcon-0-0-1x_U007emarketing-0-0-0-10-0-0-sRGB-0-0-0-GLES2_U002c0-512MB-85-220-0-0.png/492x0w.png",
      "name": "Apple Music",
      "desc": "Over 100 million songs.",
      "url": "https://apps.apple.com/us/app/id1108187390",
      "get": "Install"
    }
  ]
}
