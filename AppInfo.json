{
  "urls": {
    "home": "https://hdtoday.tv/home",
    "movie": "https://hdtoday.tv/movie",
    "tvShow": "https://hdtoday.tv/tv-show",
    "topIMDB": {
      "all": "https://hdtoday.tv/top-imdb?type=all",
      "movie": "https://hdtoday.tv/top-imdb?type=movie",
      "tvShow": "https://hdtoday.tv/top-imdb?type=tv"
    },
    "search": "https://hdtoday.tv/search",
    "filter": "https://hdtoday.tv/filter",
    "filterDefault": "https://hdtoday.tv/filter?type=all&quality=all&release_year=all&genre=all&country=all"
  },
  "alerts": {
    "ios": [
      {
        "type": "version",
        "value": "1.0.0",
        "title": "Update The New Version",
        "message": "This app has been updated by Apple to display the Apple Watch app icon.\nThe latest update includes minor improvements and fixes.",
        "url": "https://apps.apple.com/us/app/id471966214",
        "yes": "Update",
        "no": "Close",
        "show": false,
        "force": false
      },
      {
        "type": "rating",
        "value": "",
        "title": "Write down your comment",
        "message": "If you love our app, please take a moment to rate it in the App Store",
        "url": "https://itunes.apple.com/app/id471966214?action=write-review",
        "yes": "Rate",
        "no": "Close",
        "show": true,
        "force": false
      },
      {
        "type": "announcement",
        "value": "",
        "title": "Twitter @elonmusk",
        "message": "For the latest app news, please follow us on Twitter.",
        "url": "https://twitter.com/elonmusk",
        "yes": "Follow",
        "no": "Close",
        "show": true,
        "force": false
      }
    ],
    "android": [
      {
        "type": "version",
        "value": "1.0.0",
        "title": "Update The New Version",
        "message": "This app has been updated by Apple to display the Apple Watch app icon.\nThe latest update includes minor improvements and fixes.",
        "url": "https://apps.apple.com/us/app/id471966214",
        "yes": "Update",
        "no": "Close",
        "show": false,
        "force": false
      },
      {
        "type": "rating",
        "value": "",
        "title": "Write down your comment",
        "message": "If you love our app, please take a moment to rate it in the App Store",
        "url": "https://itunes.apple.com/app/id471966214?action=write-review",
        "yes": "Rate",
        "no": "Close",
        "show": true,
        "force": false
      },
      {
        "type": "announcement",
        "value": "",
        "title": "Twitter @elonmusk",
        "message": "For the latest app news, please follow us on Twitter.",
        "url": "https://twitter.com/elonmusk",
        "yes": "Follow",
        "no": "Close",
        "show": true,
        "force": false
      }
    ]
  },
  "ads": {
    "rotate": false,
    "items": [
      {
        "type": "applovin",
        "sdkKey": "",
        "adId": ""
      },
      {
        "type": "admob",
        "sdkKey": "",
        "adId": ""
      },
      {
        "type": "unity",
        "sdkKey": "",
        "adId": ""
      }
    ]
  },
  "userAgent": {
    "ios": "Mozilla/5.0 (iPhone; CPU iPhone OS 15_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/",
    "android": "Mozilla/5.0 (Linux; Android 10) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.5304.105 Mobile Safari/537.36"
  },
  "scripts": {
    "home": "Z2V0SG9tZSgpCgpmdW5jdGlvbiBnZXRIb21lKCkgewogICAgdmFyIHRpdGxlID0gIlRyZW5kaW5nIE1vdmllcyIKICAgIHZhciB0cmVuZGluZ01vdmllcyA9IHsKICAgICAgICB0aXRsZTogdGl0bGUsCiAgICAgICAgdmlld01vcmU6ICIiLAogICAgICAgIHVybDogIiIsCiAgICAgICAgaXRlbXM6IGdldFRyZW5kaW5nTWVkaWFzQnlJZCgidHJlbmRpbmctbW92aWVzIikKICAgIH0KICAgIHRpdGxlID0gIlRyZW5kaW5nIFRWIFNob3dzIgogICAgdmFyIHRyZW5kaW5nVFZTaG93cyA9IHsKICAgICAgICB0aXRsZTogdGl0bGUsCiAgICAgICAgdmlld01vcmU6ICIiLAogICAgICAgIHVybDogIiIsCiAgICAgICAgaXRlbXM6IGdldFRyZW5kaW5nTWVkaWFzQnlJZCgidHJlbmRpbmctdHYiKQogICAgfQogICAgCiAgICB0aXRsZSA9ICJMYXRlc3QgTW92aWVzIgogICAgdmFyIGxhdGVzdE1vdmllcyA9IHsKICAgICAgICB0aXRsZTogdGl0bGUsCiAgICAgICAgdmlld01vcmU6ICIiLAogICAgICAgIHVybDogIiIsCiAgICAgICAgaXRlbXM6IGdldE1lZGlhc0J5VGl0bGUodGl0bGUpCiAgICB9CiAgICAKICAgIHRpdGxlID0gIkxhdGVzdCBUViBTaG93cyIKICAgIHZhciBsYXRlc3RUVlNob3dzID0gewogICAgICAgIHRpdGxlOiB0aXRsZSwKICAgICAgICB2aWV3TW9yZTogIiIsCiAgICAgICAgdXJsOiAiIiwKICAgICAgICBpdGVtczogZ2V0TWVkaWFzQnlUaXRsZSh0aXRsZSkKICAgIH0KICAgIAogICAgdGl0bGUgPSAiQ29taW5nIFNvb24iCiAgICB2YXIgY29taW5nU29vbiA9IHsKICAgICAgICB0aXRsZTogdGl0bGUsCiAgICAgICAgdmlld01vcmU6ICJWaWV3IG1vcmUiLAogICAgICAgIHVybDogImh0dHBzOi8vaGR0b2RheS50di9jb21pbmctc29vbiIsCiAgICAgICAgaXRlbXM6IGdldE1lZGlhc0J5VGl0bGUodGl0bGUpCiAgICB9CiAgICAKICAgIHRpdGxlID0gIkdlbnJlcyIKICAgIHZhciBnZW5yZXMgPSB7CiAgICAgICAgdGl0bGU6IHRpdGxlLAogICAgICAgIGl0ZW1zOiBnZXRHZW5yZXMoKQogICAgfQogICAgCiAgICB0aXRsZSA9ICJDb3VudHJpZXMiCiAgICB2YXIgY291bnRyaWVzID0gewogICAgICAgIHRpdGxlOiB0aXRsZSwKICAgICAgICBpdGVtczogZ2V0Q291bnRyaWVzKCkKICAgIH0KICAgIAogICAgdmFyIHJlc3VsdCA9IHsKICAgICAgICB0cmVuZGluZ01vdmllczogdHJlbmRpbmdNb3ZpZXMsIAogICAgICAgIHRyZW5kaW5nVFZTaG93czogdHJlbmRpbmdUVlNob3dzLAogICAgICAgIGxhdGVzdE1vdmllczogbGF0ZXN0TW92aWVzLAogICAgICAgIGxhdGVzdFRWU2hvd3M6IGxhdGVzdFRWU2hvd3MsCiAgICAgICAgY29taW5nU29vbjogY29taW5nU29vbiwKICAgICAgICBnZW5yZXM6IGdlbnJlcywKICAgICAgICBjb3VudHJpZXM6IGNvdW50cmllcwogICAgfQogICAgCiAgICBjb25zb2xlLmxvZyhKU09OLnN0cmluZ2lmeShyZXN1bHQpKQogICAgaWYgKGlPUygpID09IHRydWUpIHsKICAgICAgICB3aW5kb3cud2Via2l0Lm1lc3NhZ2VIYW5kbGVycy5ob21lLnBvc3RNZXNzYWdlKEpTT04uc3RyaW5naWZ5KHJlc3VsdCkpCiAgICB9ZWxzZXsKICAgICAgICB3aW5kb3cuaG9tZS5wb3N0TWVzc2FnZShKU09OLnN0cmluZ2lmeShyZXN1bHQpKQogICAgfQp9CgpmdW5jdGlvbiBpT1MoKXsKICAgIGNvbnNvbGUubG9nKG5hdmlnYXRvci5wbGF0Zm9ybSkKICAgIHJldHVybiAvaVBhZHxpUGhvbmV8aVBvZC8udGVzdChuYXZpZ2F0b3IucGxhdGZvcm0pCn0KCgpmdW5jdGlvbiBnZXRUcmVuZGluZ01lZGlhc0J5SWQoaWQpIHsKICAgIHZhciBpdGVtcyA9IFtdCiAgICB2YXIgbm9kZXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCkuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiZmx3LWl0ZW0iKQogICAgZm9yIChub2RlIG9mIG5vZGVzKSB7CiAgICAgICAgdmFyIGl0ZW0gPSBnZXRNZWRpYShub2RlKQogICAgICAgIGl0ZW1zLnB1c2goaXRlbSkKICAgIH0KICAgIHJldHVybiBpdGVtcwp9CgpmdW5jdGlvbiBnZXRNZWRpYShub2RlKXsKICAgIGxldCBwb3N0ZXJzID0gbm9kZS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJmaWxtLXBvc3RlciIpCiAgICB2YXIgaWQgPSAiIgogICAgdmFyIHRpdGxlID0gIiIKICAgIHZhciB1cmwgPSAiIgogICAgdmFyIGltYWdlID0gIiIKICAgIHZhciByZWxlYXNlRGF0ZSA9ICIiCiAgICB2YXIgcXVhbGl0eSA9ICIiCiAgICB2YXIgdHlwZSA9ICIiCiAgICBpZiAocG9zdGVycy5sZW5ndGggPiAwKSB7CiAgICAgICAgaWQgPSBwb3N0ZXJzWzBdLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJhIilbMF0uZ2V0QXR0cmlidXRlKCJocmVmIikKICAgICAgICB0aXRsZSA9IHBvc3RlcnNbMF0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoImEiKVswXS50aXRsZQogICAgICAgIHVybCA9IHBvc3RlcnNbMF0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoImEiKVswXS5ocmVmCiAgICAgICAgaW1hZ2UgPSBwb3N0ZXJzWzBdLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJpbWciKVswXS5nZXRBdHRyaWJ1dGUoImRhdGEtc3JjIikKICAgICAgICB2YXIgcXVhbGl0eUVsZW1lbnQgPSBwb3N0ZXJzWzBdLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoInBpY2sgZmlsbS1wb3N0ZXItcXVhbGl0eSIpCiAgICAgICAgaWYgKHF1YWxpdHlFbGVtZW50Lmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgcXVhbGl0eSA9IHF1YWxpdHlFbGVtZW50WzBdLnRleHRDb250ZW50CiAgICAgICAgfQogICAgfQogICAgcmVsZWFzZURhdGUgPSBub2RlLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImZkaS1pdGVtIilbMF0udGV4dENvbnRlbnQKICAgIHR5cGUgPSBub2RlLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImZsb2F0LXJpZ2h0IGZkaS10eXBlIilbMF0udGV4dENvbnRlbnQKICAgIGlmICh0eXBlID09ICJUViIgJiYgbm9kZS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJmZGktaXRlbSIpLmxlbmd0aCA+IDEpewogICAgICAgIGxldCBzZWFzb24gPSByZWxlYXNlRGF0ZS5yZXBsYWNlKCJTUyAiLCAiUyIpCiAgICAgICAgbGV0IGVwaXNvZGUgPSBub2RlLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImZkaS1pdGVtIilbMV0udGV4dENvbnRlbnQucmVwbGFjZSgiRVBTICIsICJFIikKICAgICAgICByZWxlYXNlRGF0ZSA9IHNlYXNvbiArIGVwaXNvZGUKICAgIH0KICAgIHZhciBtZWRpYSA9IHsKICAgICAgICBpZDogaWQsCiAgICAgICAgdGl0bGU6IHRpdGxlLAogICAgICAgIHVybDogdXJsLAogICAgICAgIGltYWdlOiBpbWFnZSwKICAgICAgICByZWxlYXNlRGF0ZTogcmVsZWFzZURhdGUsCiAgICAgICAgcXVhbGl0eTogcXVhbGl0eSwKICAgICAgICB0eXBlOiB0eXBlCiAgICB9CiAgICByZXR1cm4gbWVkaWEKfQoKZnVuY3Rpb24gZ2V0TWVkaWFzQnlUaXRsZSh0aXRsZU5hbWUpIHsKICAgIHZhciBub2RlcyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImJsb2NrX2FyZWEgYmxvY2tfYXJlYV9ob21lIHNlY3Rpb24taWQtMDIiKQogICAgZm9yIChub2RlIG9mIG5vZGVzKSB7CiAgICAgICAgdmFyIHRpdGxlID0gbm9kZS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJjYXQtaGVhZGluZyIpWzBdLnRleHRDb250ZW50CiAgICAgICAgaWYgKHRpdGxlLnRvTG93ZXJDYXNlKCkgPT0gdGl0bGVOYW1lLnRvTG93ZXJDYXNlKCkpIHsKICAgICAgICAgICAgcmV0dXJuIGdldE1lZGlhcyhub2RlLCAiZmx3LWl0ZW0iKQogICAgICAgIH0KICAgIH0KfQoKZnVuY3Rpb24gZ2V0TWVkaWFzKGVsZW1lbnQsIGNsYXNzTmFtZSkgewogICAgdmFyIG1lZGlhcyA9IFtdCiAgICB2YXIgbm9kZXMgPSBlbGVtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoY2xhc3NOYW1lKQogICAgZm9yIChub2RlIG9mIG5vZGVzKSB7CiAgICAgICAgdmFyIG1lZGlhID0gZ2V0TWVkaWEobm9kZSkKICAgICAgICBtZWRpYXMucHVzaChtZWRpYSkKICAgIH0KICAgIHJldHVybiBtZWRpYXMKfQoKZnVuY3Rpb24gZ2V0R2VucmVzKCl7CiAgICB2YXIgZ2VucmVzID0gW10KICAgIHZhciBlbGVtZW50cyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJzaWRlYmFyX3N1YnNfZ2VucmUiKS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJuYXYtbGluayIpCiAgICBmb3IgKGVsZW1lbnQgb2YgZWxlbWVudHMpIHsKICAgICAgICB2YXIgZ2VucmUgPSBnZXRHZW5yZShlbGVtZW50KQogICAgICAgIGdlbnJlcy5wdXNoKGdlbnJlKQogICAgfQogICAgcmV0dXJuIGdlbnJlcwp9CgpmdW5jdGlvbiBnZXRHZW5yZShlbGVtZW50KSB7CiAgICB2YXIgZ2VucmUgPSB7CiAgICAgICAgaWQ6IGVsZW1lbnQuaHJlZiwKICAgICAgICB0aXRsZTogZWxlbWVudC50ZXh0Q29udGVudAogICAgfQogICAgcmV0dXJuIGdlbnJlCn0KZnVuY3Rpb24gZ2V0Q291bnRyaWVzKCl7CiAgICB2YXIgY291bnRyaWVzID0gW10KICAgIHZhciBlbGVtZW50cyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJzaWRlYmFyX3N1YnNfY291bnRyeSIpLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoIm5hdi1saW5rIikKICAgIGZvciAoZWxlbWVudCBvZiBlbGVtZW50cykgewogICAgICAgIHZhciBjb3VudHJ5ID0gZ2V0Q291bnRyeShlbGVtZW50KQogICAgICAgIGNvdW50cmllcy5wdXNoKGNvdW50cnkpCiAgICB9CiAgICByZXR1cm4gY291bnRyaWVzCn0KCmZ1bmN0aW9uIGdldENvdW50cnkoZWxlbWVudCkgewogICAgdmFyIGNvdW50cnkgPSB7CiAgICAgICAgaWQ6IGVsZW1lbnQuaHJlZiwKICAgICAgICB0aXRsZTogZWxlbWVudC50ZXh0Q29udGVudCwKICAgICAgICBjb2RlOiBlbGVtZW50LmhyZWYuc3BsaXQoIi8iKS5wb3AoKQogICAgfQogICAgcmV0dXJuIGNvdW50cnkKfQ==",
    "search": "Z2V0U2VhcmNoUmVzdWx0cygpCgpmdW5jdGlvbiBnZXRTZWFyY2hSZXN1bHRzKCl7CiAgICB2YXIgbWVkaWFzID0gZ2V0TWVkaWFzKCkKICAgIAogICAgY29uc3QgdXJsUGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcyh3aW5kb3cubG9jYXRpb24uc2VhcmNoKQogICAgY29uc3QgcGFnZSA9IHVybFBhcmFtcy5nZXQoInBhZ2UiKQogICAgY29uc3QgaGFzTmV4dFBhZ2UgPSAobWVkaWFzLmxlbmd0aCA+IDAgPyB0cnVlIDogZmFsc2UpCiAgICAKICAgIHZhciByZXN1bHQgPSB7CiAgICAgICAgY3VycmVudFBhZ2U6IHBhZ2UsCiAgICAgICAgaGFzTmV4dFBhZ2U6IGhhc05leHRQYWdlLAogICAgICAgIHJlc3VsdHM6IG1lZGlhcywKICAgICAgICBmaWx0ZXI6IGdldEZpbHRlcigpCiAgICB9CiAgICBjb25zb2xlLmxvZyhKU09OLnN0cmluZ2lmeShyZXN1bHQpKQogICAgaWYgKGlPUygpID09IHRydWUpIHsKICAgICAgICB3aW5kb3cud2Via2l0Lm1lc3NhZ2VIYW5kbGVycy5zZWFyY2gucG9zdE1lc3NhZ2UoSlNPTi5zdHJpbmdpZnkocmVzdWx0KSkKICAgIH1lbHNlewogICAgICAgIHdpbmRvdy5zZWFyY2gucG9zdE1lc3NhZ2UoSlNPTi5zdHJpbmdpZnkocmVzdWx0KSkKICAgIH0KfQoKZnVuY3Rpb24gaU9TKCl7CiAgICBjb25zb2xlLmxvZyhuYXZpZ2F0b3IucGxhdGZvcm0pCiAgICByZXR1cm4gL2lQYWR8aVBob25lfGlQb2QvLnRlc3QobmF2aWdhdG9yLnBsYXRmb3JtKQp9CgpmdW5jdGlvbiBnZXRNZWRpYXMoKXsKICAgIHZhciBtZWRpYXMgPSBbXSAKICAgIHZhciBub2RlcyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImZsdy1pdGVtIikKICAgIGZvciAobm9kZSBvZiBub2RlcykgewogICAgICAgIHZhciBtZWRpYSA9IGdldE1lZGlhKG5vZGUpCiAgICAgICAgbWVkaWFzLnB1c2gobWVkaWEpCiAgICB9CiAgICByZXR1cm4gbWVkaWFzCn0KCmZ1bmN0aW9uIGdldE1lZGlhKG5vZGUpewogICAgbGV0IHBvc3RlcnMgPSBub2RlLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImZpbG0tcG9zdGVyIikKICAgIHZhciBpZCA9ICIiCiAgICB2YXIgdGl0bGUgPSAiIgogICAgdmFyIHVybCA9ICIiCiAgICB2YXIgaW1hZ2UgPSAiIgogICAgdmFyIHJlbGVhc2VEYXRlID0gIiIKICAgIHZhciBxdWFsaXR5ID0gIiIKICAgIHZhciB0eXBlID0gIiIKICAgIGlmIChwb3N0ZXJzLmxlbmd0aCA+IDApIHsKICAgICAgICBpZCA9IHBvc3RlcnNbMF0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoImEiKVswXS5nZXRBdHRyaWJ1dGUoImhyZWYiKQogICAgICAgIHRpdGxlID0gcG9zdGVyc1swXS5nZXRFbGVtZW50c0J5VGFnTmFtZSgiYSIpWzBdLnRpdGxlCiAgICAgICAgdXJsID0gcG9zdGVyc1swXS5nZXRFbGVtZW50c0J5VGFnTmFtZSgiYSIpWzBdLmhyZWYKICAgICAgICBpbWFnZSA9IHBvc3RlcnNbMF0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoImltZyIpWzBdLmdldEF0dHJpYnV0ZSgiZGF0YS1zcmMiKQogICAgICAgIHZhciBxdWFsaXR5RWxlbWVudCA9IHBvc3RlcnNbMF0uZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgicGljayBmaWxtLXBvc3Rlci1xdWFsaXR5IikKICAgICAgICBpZiAocXVhbGl0eUVsZW1lbnQubGVuZ3RoID4gMCkgewogICAgICAgICAgICBxdWFsaXR5ID0gcXVhbGl0eUVsZW1lbnRbMF0udGV4dENvbnRlbnQKICAgICAgICB9CiAgICB9CiAgICByZWxlYXNlRGF0ZSA9IG5vZGUuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiZmRpLWl0ZW0iKVswXS50ZXh0Q29udGVudAogICAgdHlwZSA9IG5vZGUuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiZmxvYXQtcmlnaHQgZmRpLXR5cGUiKVswXS50ZXh0Q29udGVudAogICAgaWYgKHR5cGUgPT0gIlRWIiAmJiBub2RlLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImZkaS1pdGVtIikubGVuZ3RoID4gMSl7CiAgICAgICAgbGV0IHNlYXNvbiA9IHJlbGVhc2VEYXRlLnJlcGxhY2UoIlNTICIsICJTIikKICAgICAgICBsZXQgZXBpc29kZSA9IG5vZGUuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiZmRpLWl0ZW0iKVsxXS50ZXh0Q29udGVudC5yZXBsYWNlKCJFUFMgIiwgIkUiKQogICAgICAgIHJlbGVhc2VEYXRlID0gc2Vhc29uICsgZXBpc29kZQogICAgfQogICAgdmFyIG1lZGlhID0gewogICAgICAgIGlkOiBpZCwKICAgICAgICB0aXRsZTogdGl0bGUsCiAgICAgICAgdXJsOiB1cmwsCiAgICAgICAgaW1hZ2U6IGltYWdlLAogICAgICAgIHJlbGVhc2VEYXRlOiByZWxlYXNlRGF0ZSwKICAgICAgICBxdWFsaXR5OiBxdWFsaXR5LAogICAgICAgIHR5cGU6IHR5cGUKICAgIH0KICAgIHJldHVybiBtZWRpYQp9CgpmdW5jdGlvbiBnZXRGaWx0ZXIoKSB7CiAgICB2YXIgY2F0ZWdvcnlFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiY2F0ZWdvcnlfZmlsdGVyLWNvbnRlbnQiKVswXQogICAgdmFyIGVsZW1lbnRzID0gY2F0ZWdvcnlFbGVtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoIm5pLWhlYWQiKQogICAgCiAgICB2YXIgZmlsdGVyID0gewogICAgICAgIHR5cGU6IHsKICAgICAgICAgICAgdGl0bGU6ICJUeXBlIiwKICAgICAgICAgICAgaXRlbXM6Z2V0RmlsdGVySXRlbXMoZWxlbWVudHMsICJUeXBlIikKICAgICAgICB9LAogICAgICAgIHF1YWxpdHk6IHsKICAgICAgICAgICAgdGl0bGU6ICJRdWFsaXR5IiwKICAgICAgICAgICAgaXRlbXM6IGdldEZpbHRlckl0ZW1zKGVsZW1lbnRzLCAiUXVhbGl0eSIpCiAgICAgICAgfSwKICAgICAgICByZWxlYXNlZDogewogICAgICAgICAgICB0aXRsZTogIlJlbGVhc2VkIiwKICAgICAgICAgICAgaXRlbXM6IGdldEZpbHRlckl0ZW1zKGVsZW1lbnRzLCAiUmVsZWFzZWQiKQogICAgICAgIH0sCiAgICAgICAgZ2VucmU6IHsKICAgICAgICAgICAgdGl0bGU6ICJHZW5yZSIsCiAgICAgICAgICAgIGl0ZW1zOiBnZXRGaWx0ZXJJdGVtcyhlbGVtZW50cywgIkdlbnJlIikKICAgICAgICB9LAogICAgICAgIGNvdW50cnk6IHsKICAgICAgICAgICAgdGl0bGU6ICJDb3VudHJ5IiwKICAgICAgICAgICAgaXRlbXM6IGdldEZpbHRlckl0ZW1zKGVsZW1lbnRzLCAiQ291bnRyeSIpCiAgICAgICAgfQogICAgfQogICAgcmV0dXJuIGZpbHRlcgp9CgpmdW5jdGlvbiBnZXRGaWx0ZXJJdGVtcyhlbGVtZW50cywgdGl0bGUpIHsKICAgIHZhciBzdWJFbGVtZW50cwogICAgZm9yIChlbGVtZW50IG9mIGVsZW1lbnRzKSB7CiAgICAgICAgaWYgKGVsZW1lbnQudGV4dENvbnRlbnQuaW5jbHVkZXModGl0bGUpID09IHRydWUpIHsKICAgICAgICAgICAgc3ViRWxlbWVudHMgPSBlbGVtZW50LnBhcmVudE5vZGUuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiZm9ybS1jaGVjayBmb3JtLWNoZWNrLWlubGluZSIpCiAgICAgICAgICAgIGJyZWFrCiAgICAgICAgfQogICAgfQogICAgdmFyIGl0ZW1zID0gW10KICAgIGZvciAoZWxlbWVudCBvZiBzdWJFbGVtZW50cykgewogICAgICAgIHZhciBpdGVtID0gZ2V0RmlsdGVySXRlbShlbGVtZW50KQogICAgICAgIGl0ZW1zLnB1c2goaXRlbSkKICAgIH0KICAgIHJldHVybiBpdGVtcwp9CgpmdW5jdGlvbiBnZXRGaWx0ZXJJdGVtKGVsZW1lbnQpIHsKICAgIHZhciBpbnB1dEVsZW1lbnQgPSBlbGVtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJpbnB1dCIpWzBdCiAgICB2YXIgbGFiZWxFbGVtZW50ID0gZWxlbWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgibGFiZWwiKVswXQogICAgdmFyIHR5cGUgPSBpbnB1dEVsZW1lbnQuZ2V0QXR0cmlidXRlKCJ0eXBlIikKICAgIHZhciBuYW1lID0gaW5wdXRFbGVtZW50LmdldEF0dHJpYnV0ZSgibmFtZSIpCiAgICBpZiAobmFtZSA9PSAiY291bnRyaWVzW10iKSB7CiAgICAgICAgbmFtZSA9ICJjb3VudHJ5IgogICAgfSBlbHNlIGlmIChuYW1lID09ICJnZW5yZXNbXSIpIHsKICAgICAgICBuYW1lID0gImdlbnJlIgogICAgfQogICAgdmFyIHZhbHVlID0gaW5wdXRFbGVtZW50LmdldEF0dHJpYnV0ZSgidmFsdWUiKQogICAgdmFyIHRpdGxlID0gbGFiZWxFbGVtZW50LnRleHRDb250ZW50CiAgICB2YXIgaXNTZWxlY3RlZCA9IGZhbHNlCiAgICBpZiAodmFsdWUgPT0gImFsbCIpIHsKICAgICAgICBpc1NlbGVjdGVkID0gdHJ1ZQogICAgfQogICAgdmFyIGl0ZW0gPSB7CiAgICAgICAgaWQ6IHZhbHVlLAogICAgICAgIHR5cGU6IHR5cGUsCiAgICAgICAgaWQ6IHZhbHVlLAogICAgICAgIG5hbWU6IG5hbWUsIAogICAgICAgIHZhbHVlOiB2YWx1ZSwgCiAgICAgICAgdGl0bGU6IHRpdGxlLAogICAgICAgIGlzU2VsZWN0ZWQ6IGlzU2VsZWN0ZWQKICAgIH0KICAgIHJldHVybiBpdGVtCn0=",
    "detail": "",
    "episodes": "dmFyIHJlc3VsdCA9IGdldEVwaXNvZGVzKCkKY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkocmVzdWx0KSkKCmlmIChpT1MoKSA9PSB0cnVlKSB7CiAgICB3aW5kb3cud2Via2l0Lm1lc3NhZ2VIYW5kbGVycy5lcGlzb2Rlcy5wb3N0TWVzc2FnZShKU09OLnN0cmluZ2lmeShyZXN1bHQpKQp9ZWxzZXsKICAgIHdpbmRvdy5lcGlzb2Rlcy5wb3N0TWVzc2FnZShKU09OLnN0cmluZ2lmeShyZXN1bHQpKQp9CgpmdW5jdGlvbiBpT1MoKXsKICAgIGNvbnNvbGUubG9nKG5hdmlnYXRvci5wbGF0Zm9ybSkKICAgIHJldHVybiAvaVBhZHxpUGhvbmV8aVBvZC8udGVzdChuYXZpZ2F0b3IucGxhdGZvcm0pCn0KCmZ1bmN0aW9uIGdldEVwaXNvZGVzKCkgewogICAgdmFyIGVwaXNvZGVzID0gW10KICAgIHZhciBlbGVtZW50cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoIm5hdi1pdGVtIikKICAgIGZvciAoZWxlbWVudCBvZiBlbGVtZW50cykgewogICAgICAgIHZhciBlcGlzb2RlID0gZ2V0RXBpc29kZShlbGVtZW50LCAwKQogICAgICAgIGVwaXNvZGVzLnB1c2goZXBpc29kZSkKICAgIH0KICAgIHJldHVybiBlcGlzb2Rlcwp9CiAgICAKZnVuY3Rpb24gZ2V0RXBpc29kZShlbGVtZW50LCBzZWFzb25OdW1iZXIpIHsKICAgIHZhciBpZCA9IGVsZW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImEiKVswXS5nZXRBdHRyaWJ1dGUoImRhdGEtaWQiKQogICAgdmFyIHRpdGxlID0gZWxlbWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiYSIpWzBdLnRpdGxlCiAgICB2YXIgbnVtYmVyID0gZWxlbWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgic3Ryb25nIilbMF0udGV4dENvbnRlbnQubWF0Y2goL1xkKy8pWzBdCiAgICB2YXIgc2Vhc29uID0gc2Vhc29uTnVtYmVyCiAgICB2YXIgdXJsID0gd2luZG93LmxvY2F0aW9uLm9yaWdpbiArICIvYWpheC92Mi9lcGlzb2RlL3NlcnZlcnMvIiArIGlkCiAgICB2YXIgZXBpc29kZSA9IHsKICAgICAgICBpZDogaWQsCiAgICAgICAgdGl0bGU6IHRpdGxlLAogICAgICAgIG51bWJlcjogcGFyc2VJbnQobnVtYmVyKSwKICAgICAgICBzZWFzb246IHNlYXNvbiwKICAgICAgICB1cmw6IHVybAogICAgfQogICAgcmV0dXJuIGVwaXNvZGUKfQ==",
    "servers": "Z2V0U2VydmVycygpLnRoZW4oCiAgICBmdW5jdGlvbih2YWx1ZSl7CiAgICAgICAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkodmFsdWUpKQogICAgICAgIGlmIChpT1MoKSA9PSB0cnVlKSB7CiAgICAgICAgICAgIHdpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzLnNlcnZlcnMucG9zdE1lc3NhZ2UoSlNPTi5zdHJpbmdpZnkodmFsdWUpKQogICAgICAgIH1lbHNlewogICAgICAgICAgICB3aW5kb3cuc2VydmVycy5wb3N0TWVzc2FnZShKU09OLnN0cmluZ2lmeSh2YWx1ZSkpCiAgICAgICAgfQogICAgfQopCgpmdW5jdGlvbiBpT1MoKXsKICAgIGNvbnNvbGUubG9nKG5hdmlnYXRvci5wbGF0Zm9ybSkKICAgIHJldHVybiAvaVBhZHxpUGhvbmV8aVBvZC8udGVzdChuYXZpZ2F0b3IucGxhdGZvcm0pCn0KCgphc3luYyBmdW5jdGlvbiBnZXRTZXJ2ZXJzKCkgewogICAgdmFyIHNlcnZlcnMgPSBbXQogICAgdmFyIG5vZGVzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgibmF2LWl0ZW0iKQogICAgZm9yIChub2RlIG9mIG5vZGVzKXsKICAgICAgICB2YXIgdGFnQSA9IG5vZGUuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImEiKVswXQogICAgICAgIHZhciBpZCA9IHRhZ0EuZ2V0QXR0cmlidXRlKCJkYXRhLWlkIikKICAgICAgICBpZiAoaWQgPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICAgIGlkID0gdGFnQS5nZXRBdHRyaWJ1dGUoImRhdGEtbGlua2lkIikKICAgICAgICB9CgogICAgICAgIHZhciB0YWdTcGFuID0gbm9kZS5nZXRFbGVtZW50c0J5VGFnTmFtZSgic3BhbiIpWzBdCiAgICAgICAgbGV0IHRpdGxlID0gdGFnU3Bhbi50ZXh0Q29udGVudAoKICAgICAgICBsZXQgdXJsID0gd2luZG93LmxvY2F0aW9uLm9yaWdpbiArICIvYWpheC9zb3VyY2VzLyIgKyBpZAoKICAgICAgICBsZXQgc291cmNlc1VybCA9ICIiCiAgICAgICAgbGV0IHN1YnRpdGxlc1VybCA9ICIiCiAgICAgICAgbGV0IHVzZXJBZ2VudCA9ICJNb3ppbGxhLzUuMCAoTWFjaW50b3NoOyBJbnRlbCBNYWMgT1MgWCAxMF8xNV83KSBBcHBsZVdlYktpdC82MDUuMS4xNSAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vMTUuMyBTYWZhcmkvNjA1LjEuMTUiCiAgICAgICAgbGV0IGhlYWRlcnMgPSB7CiAgICAgICAgICAgIFVzZXJBZ2VudDogdXNlckFnZW50LAogICAgICAgICAgICBYUmVxdWVzdGVkV2l0aDogIlhNTEh0dHBSZXF1ZXN0IgogICAgICAgIH0KICAgICAgICBsZXQgc291cmNlcyA9IFtdCiAgICAgICAgbGV0IHN1YnRpdGxlcyA9IFtdCiAgICAgICAgbGV0IHBhdHRlcm5Tb3VyY2VJZAogICAgICAgIAogICAgICAgIHZhciB1cGNsb3VkVGl0bGUgPSAidXBjbG91ZCIKICAgICAgICB2YXIgdmlkY2xvdWRUaXRsZSA9ICJ2aWRjbG91ZCIKCiAgICAgICAgdmFyIGFjY2VwdFNlcnZlciA9IGZhbHNlCiAgICAgICAgaWYgKHRpdGxlLnRvTG93ZXJDYXNlKCkubG9jYWxlQ29tcGFyZSh1cGNsb3VkVGl0bGUpID09IDApIHsKICAgICAgICAgICAgaGVhZGVycy5SZWZlcmVyID0gImh0dHBzOi8vZG9raWNsb3VkLm9uZS8iCiAgICAgICAgICAgIGFjY2VwdFNlcnZlciA9IHRydWUKICAgICAgICB9ZWxzZSBpZiAodGl0bGUudG9Mb3dlckNhc2UoKS5sb2NhbGVDb21wYXJlKHZpZGNsb3VkVGl0bGUpID09IDApIHsKICAgICAgICAgICAgaGVhZGVycy5SZWZlcmVyID0gImh0dHBzOi8vcmFiYml0c3RyZWFtLm5ldC8iCiAgICAgICAgICAgIGFjY2VwdFNlcnZlciA9IHRydWUKICAgICAgICB9CgogICAgICAgIHZhciBzZXJ2ZXIgPSB7CiAgICAgICAgICAgIGlkOiBpZCwKICAgICAgICAgICAgdGl0bGU6IHRpdGxlLAogICAgICAgICAgICB1cmw6IHVybCwKICAgICAgICAgICAgc291cmNlc1VybDogc291cmNlc1VybCwKICAgICAgICAgICAgc3VidGl0bGVzVXJsOiBzdWJ0aXRsZXNVcmwsCiAgICAgICAgICAgIGhlYWRlcnM6IGhlYWRlcnMsCiAgICAgICAgICAgIHNvdXJjZXM6IHNvdXJjZXMsCiAgICAgICAgICAgIHN1YnRpdGxlczogc3VidGl0bGVzCiAgICAgICAgfQogICAgICAgIGlmIChhY2NlcHRTZXJ2ZXIgPT0gdHJ1ZSkgewogICAgICAgICAgICBzZXJ2ZXJzLnB1c2goc2VydmVyKQogICAgICAgIH0KICAgIH0KICAgIAogICAgdmFyIHNlcnZlclRpdGxlcyA9IFt1cGNsb3VkVGl0bGUsIHZpZGNsb3VkVGl0bGVdCiAgICBmb3IgKHRpdGxlIG9mIHNlcnZlclRpdGxlcykgewogICAgICAgIGZvciAoc2VydmVyIG9mIHNlcnZlcnMpIHsKICAgICAgICAgICAgaWYgKHNlcnZlci50aXRsZS50b0xvd2VyQ2FzZSgpLmxvY2FsZUNvbXBhcmUodGl0bGUpID09IDApIHsKICAgICAgICAgICAgICAgIGxldCBpbmRleCA9IHNlcnZlcnMuaW5kZXhPZihzZXJ2ZXIpCiAgICAgICAgICAgICAgICBzZXJ2ZXIgPSBhd2FpdCBzZXJ2ZXJEZXRhaWwoc2VydmVyKQogICAgICAgICAgICAgICAgaWYgKHRpdGxlLmxvY2FsZUNvbXBhcmUodXBjbG91ZFRpdGxlKSA9PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgc2VydmVyLnN1YnRpdGxlc1VybCA9IChuZXcgVXBDbG91ZCgpKS5nZXRTdWJ0aXRsZXNVcmwoc2VydmVyLnNvdXJjZXNVcmwpCiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHRpdGxlLmxvY2FsZUNvbXBhcmUodmlkY2xvdWRUaXRsZSkgPT0gMCkgewogICAgICAgICAgICAgICAgICAgIHNlcnZlci5zdWJ0aXRsZXNVcmwgPSAobmV3IFZpZENsb3VkKCkpLmdldFN1YnRpdGxlc1VybChzZXJ2ZXIuc291cmNlc1VybCkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHNlcnZlcnNbaW5kZXhdID0gc2VydmVyCiAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQogICAgCiAgICByZXR1cm4gc2VydmVycwp9CgpmdW5jdGlvbiBnZXREZWZhdWx0U2V2ZXIoc2VydmVycywgZGVmYXVsdFNlcnZlclRpdGxlKSB7CiAgICB2YXIgZGVmYXVsdFNlcnZlcgogICAgZm9yIChzZXJ2ZXIgb2Ygc2VydmVycykgewogICAgICAgIGlmIChzZXJ2ZXIudGl0bGUudG9Mb3dlckNhc2UoKS5sb2NhbGVDb21wYXJlKGRlZmF1bHRTZXJ2ZXJUaXRsZSkgPT0gMCkgewogICAgICAgICAgICBkZWZhdWx0U2VydmVyID0gc2VydmVyCiAgICAgICAgICAgIGJyZWFrCiAgICAgICAgfQogICAgfQogICAgcmV0dXJuIGRlZmF1bHRTZXJ2ZXIKfQoKCmFzeW5jIGZ1bmN0aW9uIHNlcnZlckRldGFpbChzZXJ2ZXIpIHsKICAgIGxldCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHNlcnZlci51cmwsIHsKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICJVc2VyLUFnZW50IjogIk1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1hYyBPUyBYIDEwXzE1XzcpIEFwcGxlV2ViS2l0LzYwNS4xLjE1IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi8xNS4zIFNhZmFyaS82MDUuMS4xNSIKICAgICAgICB9CiAgICB9KQogICAgbGV0IGpzb24gPSBhd2FpdCByZXNwb25zZS5qc29uKCkKICAgIHNlcnZlci50eXBlID0ganNvbi50eXBlCiAgICBzZXJ2ZXIuc291cmNlc1VybCA9IGpzb24ubGluawogICAgcmV0dXJuIHNlcnZlcgp9CgoKY2xhc3MgVXBDbG91ZCB7CiAgICBzdHJlYW0oKSB7CiAgICAgICAgdmFyIGxpbmsgPSAiaHR0cHM6Ly9oZHRvZGF5LnR2L2FqYXgvc291cmNlcy8iICsgaWQKICAgICAgICB0aGlzLnNvdXJjZXMobGluaywgdGhpcy5nZXRTb3VyY2VzKQogICAgfQogICAgZ2V0U3VidGl0bGVzVXJsKHNvdXJjZXNVcmwpIHsKICAgICAgICB2YXIgc3VidGl0bGVzVXJsID0gImh0dHBzOi8vZG9raWNsb3VkLm9uZS9hamF4L2VtYmVkLTQvZ2V0U291cmNlcz9pZD0iICsgdGhpcy5nZXRTb3VyY2VJZChzb3VyY2VzVXJsKQogICAgICAgIHJldHVybiBzdWJ0aXRsZXNVcmwKICAgIH0KICAgIHNvdXJjZXMobGluaywgY2FsbGJhY2spIHsKICAgICAgICBmZXRjaChsaW5rKQogICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpCiAgICAgICAgfSkKICAgICAgICAudGhlbigoZGF0YSkgPT4gewogICAgICAgICAgICBjb25zdCBzb3VyY2VJZCA9IHRoaXMuc291cmNlSWQoZGF0YS5saW5rKQogICAgICAgICAgICBjYWxsYmFjayhzb3VyY2VJZCkKICAgICAgICB9KQogICAgICAgIC5jYXRjaChmdW5jdGlvbigpewogICAgICAgICAgICBjYWxsYmFjaygiIikKICAgICAgICB9KQogICAgfQogICAgZ2V0U291cmNlSWQoc291cmNlc1VybCkgewogICAgICAgIGNvbnN0IHNvdXJjZUlkID0gc291cmNlc1VybC5zbGljZSgKICAgICAgICAgICAgc291cmNlc1VybC5sYXN0SW5kZXhPZigiLyIpICsgMSwKICAgICAgICAgICAgc291cmNlc1VybC5pbmRleE9mKCI/IikKICAgICAgICApCiAgICAgICAgcmV0dXJuIHNvdXJjZUlkCiAgICB9CiAgICBnZXRTb3VyY2VzKHNvdXJjZUlkKSB7CiAgICAgICAgdmFyIGxpbmsgPSAiaHR0cHM6Ly9kb2tpY2xvdWQub25lL2FqYXgvZW1iZWQtNC9nZXRTb3VyY2VzP2lkPSIgKyBzb3VyY2VJZAogICAgICAgIAogICAgICAgIGZldGNoKGxpbmssIHsKICAgICAgICAgICAgbWV0aG9kOiAiR0VUIiwKICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgIlgtUmVxdWVzdGVkLVdpdGgiOiAiWE1MSHR0cFJlcXVlc3QiLAogICAgICAgICAgICAgICAgIlJlZmVyZXIiOiAiaHR0cHM6Ly9kb2tpY2xvdWQub25lLyIsCiAgICAgICAgICAgICAgICAiVXNlci1BZ2VudCI6ICJNb3ppbGxhLzUuMCAoTWFjaW50b3NoOyBJbnRlbCBNYWMgT1MgWCAxMF8xNV83KSBBcHBsZVdlYktpdC82MDUuMS4xNSAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vMTUuMyBTYWZhcmkvNjA1LjEuMTUiLAogICAgICAgICAgICAgICAgIkFjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbiI6ICIqIiwKICAgICAgICAgICAgICAgICJBY2NlcHQtRW5jb2RpbmciOiAiZ3ppcCwgZGVmbGF0ZSwgYnIiLAogICAgICAgICAgICAgICAgIkFjY2VwdCI6ICJleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCwqLyo7cT0wLjgiCiAgICAgICAgICAgIH0sCiAgICAgICAgfSkKICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHsKICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKQogICAgICAgIH0pCiAgICAgICAgLnRoZW4oKGRhdGEpID0+IHsKCiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goZnVuY3Rpb24oKXsKICAgICAgICAgICAgY29uc29sZS5sb2coImVycm9yIikKICAgICAgICB9KQogICAgfQp9CmNsYXNzIFZpZENsb3VkIHsKICAgIGdldFN1YnRpdGxlc1VybChzb3VyY2VzVXJsKSB7CiAgICAgICAgdmFyIHN1YnRpdGxlc1VybCA9ICJodHRwczovL3JhYmJpdHN0cmVhbS5uZXQvYWpheC9lbWJlZC00L2dldFNvdXJjZXM/aWQ9IiArIHRoaXMuZ2V0U291cmNlSWQoc291cmNlc1VybCkKICAgICAgICByZXR1cm4gc3VidGl0bGVzVXJsCiAgICB9CiAgICBnZXRTb3VyY2VJZChzb3VyY2VzVXJsKSB7CiAgICAgICAgY29uc3Qgc291cmNlSWQgPSBzb3VyY2VzVXJsLnNsaWNlKAogICAgICAgICAgICBzb3VyY2VzVXJsLmxhc3RJbmRleE9mKCIvIikgKyAxLAogICAgICAgICAgICBzb3VyY2VzVXJsLmluZGV4T2YoIj8iKQogICAgICAgICkKICAgICAgICByZXR1cm4gc291cmNlSWQKICAgIH0KfQo=",
    "stream": "dmFyIHRpZCA9IHNldEludGVydmFsKCBmdW5jdGlvbiAoKSB7CiAgICBpZiAoZG9jdW1lbnQucmVhZHlTdGF0ZSA9PSAibG9hZGluZyIgfHwgZG9jdW1lbnQucmVhZHlTdGF0ZSA9PSAidW5pbml0aWFsaXplZCIpIHsKICAgICAgICByZXR1cm4KICAgIH0KICAgIGxldCB1cmwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuanctdmlkZW8nKS5zcmMKICAgICQuZ2V0KAogICAgICAgIHVybCwKICAgICAgICBmdW5jdGlvbihkYXRhKSB7CiAgICAgICAgICAgIHZhciBzdHJlYW1zID0gW10KICAgICAgICAgICAgdmFyIHR5cGUgPSAibXA0IgogICAgICAgICAgICBpZiAodXJsLmluY2x1ZGVzKCIubTN1OCIpID09IHRydWUpIHsKICAgICAgICAgICAgICAgIHR5cGUgPSAibTN1OCIKICAgICAgICAgICAgfQogICAgICAgICAgICB2YXIgc3RyZWFtID0gewogICAgICAgICAgICAgICAgbGFiZWw6ICJPcmlnaW5hbCIsCiAgICAgICAgICAgICAgICBmaWxlOiB1cmwsCiAgICAgICAgICAgICAgICB0eXBlOiB0eXBlCiAgICAgICAgICAgIH0KICAgICAgICAgICAgc3RyZWFtcy5wdXNoKHN0cmVhbSkKICAgICAgICAgICAgcGFyc2VTdHJlYW1zKGRhdGEsIHN0cmVhbXMpCiAgICAgICAgICAgIAogICAgICAgICAgICBpZiAoaU9TKCkgPT0gdHJ1ZSkgewogICAgICAgICAgICAgICAgd2luZG93LndlYmtpdC5tZXNzYWdlSGFuZGxlcnMuc3RyZWFtLnBvc3RNZXNzYWdlKEpTT04uc3RyaW5naWZ5KHN0cmVhbXMpKQogICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgICAgIHdpbmRvdy5zdHJlYW0ucG9zdE1lc3NhZ2UoSlNPTi5zdHJpbmdpZnkoc3RyZWFtcykpCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICApCiAgICBjbGVhckludGVydmFsKCB0aWQgKQp9LCAxMDAgKQoKZnVuY3Rpb24gaU9TKCl7CiAgICBjb25zb2xlLmxvZyhuYXZpZ2F0b3IucGxhdGZvcm0pCiAgICByZXR1cm4gL2lQYWR8aVBob25lfGlQb2QvLnRlc3QobmF2aWdhdG9yLnBsYXRmb3JtKQp9CgpmdW5jdGlvbiBwYXJzZVN0cmVhbXMoZGF0YSwgc3RyZWFtcykgewogICAgdmFyIHVybFJlZ2V4ID0gLyhodHRwcz86XC9cL1teXHNdKykvZzsKICAgIHJldHVybiBkYXRhLnJlcGxhY2UodXJsUmVnZXgsIGZ1bmN0aW9uKGZpbGUpIHsKICAgICAgICB2YXIgbGFiZWwgPSAiMTA4MHAiCiAgICAgICAgaWYgKGZpbGUuaW5jbHVkZXMoIi83MjAvIikgPT0gdHJ1ZSl7CiAgICAgICAgICAgIGxhYmVsID0gIjcyMHAiCiAgICAgICAgfSBlbHNlIGlmIChmaWxlLmluY2x1ZGVzKCIvMzYwLyIpID09IHRydWUpIHsKICAgICAgICAgICAgbGFiZWwgPSAiMzYwcCIKICAgICAgICB9CiAgICAgICAgdmFyIHR5cGUgPSAibXA0IgogICAgICAgIGlmIChmaWxlLmluY2x1ZGVzKCIubTN1OCIpID09IHRydWUpIHsKICAgICAgICAgICAgdHlwZSA9ICJtM3U4IgogICAgICAgIH0KICAgICAgICB2YXIgc3RyZWFtID0gewogICAgICAgICAgICBsYWJlbDogbGFiZWwsCiAgICAgICAgICAgIGZpbGU6IGZpbGUsCiAgICAgICAgICAgIHR5cGU6IHR5cGUKICAgICAgICB9CiAgICAgICAgc3RyZWFtcy5wdXNoKHN0cmVhbSkKICAgIH0pCn0K"
  },
  "apps": {
    "ios": [
      {
        "icon": "https://is5-ssl.mzstatic.com/image/thumb/Purple122/v4/62/1c/bd/621cbdc9-6c5a-92ba-d96e-35ec09d16cc8/AppIcon-0-0-1x_U007emarketing-0-0-0-10-0-0-sRGB-0-0-0-GLES2_U002c0-512MB-85-220-0-0.png/492x0w.png",
        "name": "Apple News",
        "desc": "News + magazines, in one app",
        "url": "https://apps.apple.com/us/app/id1066498020",
        "get": "Install"
      },
      {
        "icon": "https://is1-ssl.mzstatic.com/image/thumb/Purple122/v4/e6/88/83/e688839f-1617-7df0-7423-97c2f1268f46/AppIcon-0-0-1x_U007emarketing-0-0-0-10-0-0-sRGB-0-0-0-GLES2_U002c0-512MB-85-220-0-0.png/492x0w.png",
        "name": "Apple Music",
        "desc": "Over 100 million songs.",
        "url": "https://apps.apple.com/us/app/id1108187390",
        "get": "Install"
      }
    ],
    "android": [
      {
        "icon": "https://is5-ssl.mzstatic.com/image/thumb/Purple122/v4/62/1c/bd/621cbdc9-6c5a-92ba-d96e-35ec09d16cc8/AppIcon-0-0-1x_U007emarketing-0-0-0-10-0-0-sRGB-0-0-0-GLES2_U002c0-512MB-85-220-0-0.png/492x0w.png",
        "name": "Apple News",
        "desc": "News + magazines, in one app",
        "url": "https://apps.apple.com/us/app/id1066498020",
        "get": "Install"
      },
      {
        "icon": "https://is1-ssl.mzstatic.com/image/thumb/Purple122/v4/e6/88/83/e688839f-1617-7df0-7423-97c2f1268f46/AppIcon-0-0-1x_U007emarketing-0-0-0-10-0-0-sRGB-0-0-0-GLES2_U002c0-512MB-85-220-0-0.png/492x0w.png",
        "name": "Apple Music",
        "desc": "Over 100 million songs.",
        "url": "https://apps.apple.com/us/app/id1108187390",
        "get": "Install"
      }
    ]
  }
}
